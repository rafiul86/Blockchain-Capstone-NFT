{
  "contractName": "SolnSquareVerifier",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x4a5b2025c144460fb669d17cc1d88de5ffd4aab760b94133e309bd27708dee12\",\"urls\":[\"bzzr://4c92047b83a9bde8138cc99bac69d82d2ebcefcd8ee1d5a80e74a555585c9b15\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603580601d6000396000f3fe6080604052600080fdfea165627a7a7230582052d0a266077a0bb26e57566e4f8ce72817e3a528d50cc866b847e143f218e3670029",
  "deployedBytecode": "0x6080604052600080fdfea165627a7a7230582052d0a266077a0bb26e57566e4f8ce72817e3a528d50cc866b847e143f218e3670029",
  "sourceMap": "26:35:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:35:3;;;;;;;",
  "deployedSourceMap": "26:35:3:-;;;;;",
  "source": "pragma solidity >=0.5.0;\n\ncontract SolnSquareVerifier{\n    \n}\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n\n\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\n\n\n\n// TODO define a solutions struct that can hold an index & an address\n\n\n// TODO define an array of the above struct\n\n\n// TODO define a mapping to store unique solutions submitted\n\n\n\n// TODO Create an event to emit when a solution is added\n\n\n\n// TODO Create a function to add the solutions to the array and emit the event\n\n\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle metadata as well as tokenSuplly\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "C:/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7053
      ]
    },
    "id": 7054,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7052,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7053,
        "linearizedBaseContracts": [
          7053
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 7054,
        "src": "26:35:3"
      }
    ],
    "src": "0:840:3"
  },
  "legacyAST": {
    "absolutePath": "/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7053
      ]
    },
    "id": 7054,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7052,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7053,
        "linearizedBaseContracts": [
          7053
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 7054,
        "src": "26:35:3"
      }
    ],
    "src": "0:840:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xa6dB28d85D6D866446e51fB145c1d75BF2dBcC7A",
      "transactionHash": "0xc76c315e2fe83fa511c979575a5c1e2ab7cec6e6d65f3f055f255edcf7ffa715"
    }
  },
  "schemaVersion": "3.0.9",
  "updatedAt": "2021-07-25T06:04:13.521Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}