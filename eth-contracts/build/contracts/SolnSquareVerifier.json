{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "baseTokenURI",
          "type": "string"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_pause",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "squareVerifier",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "baseTokenURI",
          "type": "string"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_unpause",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "verifierAddress",
          "type": "address"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "index",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "UnPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldOwer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "key",
          "type": "bytes32"
        }
      ],
      "name": "addSolutionsToArray",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mintToken",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"baseTokenURI\",\"type\":\"string\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"addSolutionsToArray\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"squareVerifier\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"baseTokenURI\",\"type\":\"string\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_unpause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"verifierAddress\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"UnPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOwer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x006d6415bccb23cf13bbb9e7fb537c2bb5d039197ce793db0fb29cf9330407b5\",\"urls\":[\"bzzr://8e3ab6d13bc146e9f9aeef6fd3529443da0eff8168e1cb6107443bd922aef262\"]},\"/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0x236afd0d6419539213bb7f60c86e4ac8ce08b5f9356442b10b502b2507634b2b\",\"urls\":[\"bzzr://31abd885f8c42fe3a48fcb72a3ae197cbed109a3c5beb03c6206247baa4b144a\"]},\"/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x922b42ca2d2fbcf5cc82ca0288c21f602fb54e799d22d83f18327e1699da706e\",\"urls\":[\"bzzr://96690d500df16d8693584c5a8e51982cd7956cf8a1df6904c9020ecbd665a7ab\"]},\"/C/projects/Blockchain-Capstone-NFT/zokrates/code/square/verifier.sol\":{\"keccak256\":\"0x670cb110a3a9fe3588d3173479e5910c60422020974663de50cd17e7bb5bb2a5\",\"urls\":[\"bzzr://5733c93b1fe254a045f46785a7636e164864ae3c70cf8b257bd72bfa6c8571ad\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzzr://14f0ef90a240b2aca847fe1489b10965e04ba16cf221f52ed6470d0cad291f9d\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzzr://8a586d8fd1e36ecb1bebccdd5969e38fbf7d435cf9703ffc9647be8c97bf0d31\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzzr://b89c69b072072e7fa1c8da973f82c7b28a64fb6bdc1e47626fedc89050ae783c\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xd8df7ffce6025f785967601ee94f79dae747b39917a9afbbb6fa299fe704065c\",\"urls\":[\"bzzr://8157b56cfb7905faec05ecf4cb2ae474c256ab5736598aaf322ca957383ff5ea\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003f2138038062003f21833981018060405260608110156200003757600080fd5b810190808051906020019092919080516401000000008111156200005a57600080fd5b828101905060208101848111156200007157600080fd5b81518560018202830111640100000000821117156200008f57600080fd5b50509291906020018051640100000000811115620000ac57600080fd5b82810190506020810184811115620000c357600080fd5b8151856001820283011164010000000082111715620000e157600080fd5b505092919050505081818181606060405190810160405280603f81526020017f68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e6381526020017f6f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f00815250336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a16000600260006101000a81548160ff0219169083151502179055506200029a6301ffc9a77c010000000000000000000000000000000000000000000000000000000002620003eb640100000000026401000000009004565b620002d76380ac58cd7c010000000000000000000000000000000000000000000000000000000002620003eb640100000000026401000000009004565b6200031463780e9d637c010000000000000000000000000000000000000000000000000000000002620003eb640100000000026401000000009004565b82601190805190602001906200032c929190620004aa565b50816012908051906020019062000345929190620004aa565b5080601390805190602001906200035e929190620004aa565b506200039c635b5e139f7c010000000000000000000000000000000000000000000000000000000002620003eb640100000000026401000000009004565b505050505082601760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000559565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200043d57600080fd5b600160036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004ed57805160ff19168380011785556200051e565b828001600101855582156200051e579182015b828111156200051d57825182559160200191906001019062000500565b5b5090506200052d919062000531565b5090565b6200055691905b808211156200055257600081600090555060010162000538565b5090565b90565b6139b880620005696000396000f3fe608060405260043610610175576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461017a57806306fdde03146101ec578063081812fc1461027c578063095ea7b3146102f757806309a3beef146103525780630a2766801461042457806318160ddd1461047f57806323b872dd146104aa57806327dc297e146105255780632f745c59146105f7578063320b2ad9146106665780633474e94e1461069557806338bbfa50146106e857806340c10f191461085157806342842e0e146108c45780634c1b1c931461093f5780634f6ccce7146109965780636352211e146109e55780636c0360eb14610a6057806370a0823114610af0578063715018a614610b5557806379c6506814610b6c57806395d89b4114610bdf5780639b330cb914610c6f578063a123c33e14610dba578063a22cb46514610e35578063b88d4fde14610e92578063e985e9c514610fa4578063fc8234cb1461102d575b600080fd5b34801561018657600080fd5b506101d26004803603602081101561019d57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061105c565b604051808215151515815260200191505060405180910390f35b3480156101f857600080fd5b506102016110c4565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610241578082015181840152602081019050610226565b50505050905090810190601f16801561026e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028857600080fd5b506102b56004803603602081101561029f57600080fd5b8101908080359060200190929190505050611166565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030357600080fd5b506103506004803603604081101561031a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061121b565b005b34801561035e57600080fd5b506104226004803603604081101561037557600080fd5b810190808035906020019064010000000081111561039257600080fd5b8201836020820111156103a457600080fd5b803590602001918460018302840111640100000000831117156103c657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291905050506113db565b005b34801561043057600080fd5b5061047d6004803603604081101561044757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611406565b005b34801561048b57600080fd5b506104946116a6565b6040518082815260200191505060405180910390f35b3480156104b657600080fd5b50610523600480360360608110156104cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116b3565b005b34801561053157600080fd5b506105f56004803603604081101561054857600080fd5b81019080803590602001909291908035906020019064010000000081111561056f57600080fd5b82018360208201111561058157600080fd5b803590602001918460018302840111640100000000831117156105a357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611733565b005b34801561060357600080fd5b506106506004803603604081101561061a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611776565b6040518082815260200191505060405180910390f35b34801561067257600080fd5b5061067b6117ed565b604051808215151515815260200191505060405180910390f35b3480156106a157600080fd5b506106ce600480360360208110156106b857600080fd5b81019080803590602001909291905050506119e3565b604051808215151515815260200191505060405180910390f35b3480156106f457600080fd5b5061084f6004803603606081101561070b57600080fd5b81019080803590602001909291908035906020019064010000000081111561073257600080fd5b82018360208201111561074457600080fd5b8035906020019184600183028401116401000000008311171561076657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156107c957600080fd5b8201836020820111156107db57600080fd5b803590602001918460018302840111640100000000831117156107fd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611bef565b005b34801561085d57600080fd5b506108aa6004803603604081101561087457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611bf4565b604051808215151515815260200191505060405180910390f35b3480156108d057600080fd5b5061093d600480360360608110156108e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c70565b005b34801561094b57600080fd5b50610954611cec565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109a257600080fd5b506109cf600480360360208110156109b957600080fd5b8101908080359060200190929190505050611d12565b6040518082815260200191505060405180910390f35b3480156109f157600080fd5b50610a1e60048036036020811015610a0857600080fd5b8101908080359060200190929190505050611d4a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a6c57600080fd5b50610a75611d87565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ab5578082015181840152602081019050610a9a565b50505050905090810190601f168015610ae25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610afc57600080fd5b50610b3f60048036036020811015610b1357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e29565b6040518082815260200191505060405180910390f35b348015610b6157600080fd5b50610b6a611f3c565b005b348015610b7857600080fd5b50610bc560048036036040811015610b8f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061200c565b604051808215151515815260200191505060405180910390f35b348015610beb57600080fd5b50610bf4612023565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c34578082015181840152602081019050610c19565b50505050905090810190601f168015610c615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610c7b57600080fd5b50610d3f60048036036040811015610c9257600080fd5b8101908080359060200190640100000000811115610caf57600080fd5b820183602082011115610cc157600080fd5b80359060200191846001830284011164010000000083111715610ce357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291905050506120c5565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d7f578082015181840152602081019050610d64565b50505050905090810190601f168015610dac5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610dc657600080fd5b50610df360048036036020811015610ddd57600080fd5b81019080803590602001909291905050506120fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e4157600080fd5b50610e9060048036036040811015610e5857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506121b3565b005b348015610e9e57600080fd5b50610fa260048036036080811015610eb557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610f1c57600080fd5b820183602082011115610f2e57600080fd5b80359060200191846001830284011164010000000083111715610f5057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506122ef565b005b348015610fb057600080fd5b5061101360048036036040811015610fc757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612372565b604051808215151515815260200191505060405180910390f35b34801561103957600080fd5b50611042612406565b604051808215151515815260200191505060405180910390f35b600060036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561115c5780601f106111315761010080835404028352916020019161115c565b820191906000526020600020905b81548152906001019060200180831161113f57829003601f168201915b5050505050905090565b60008082141515156111e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e4964206d7573742062652076616c6964000000000000000000000081525060200191505060405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061122682611d4a565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156112f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6581526020017f720000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061133257506113318133612372565b5b15156113cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7781526020017f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000081525060400191505060405180910390fd5b6113d6838361121b565b505050565b6113e4816125fb565b15156113ef57600080fd5b611401826113fc8361266d565b6127c6565b505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156114ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611595576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4e6577206f776e6572206d75737420626520612076616c69642061646472657381526020017f730000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b816001600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000600a80549050905090565b6116bd338261280d565b15156116c857600080fd5b6116d38383836128a2565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b611772828260006040519080825280601f01601f19166020018201604052801561176c5781602001600182028038833980820191505090505b50611bef565b5050565b600061178183611e29565b8210151561178e57600080fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156117da57fe5b9060005260206000200154905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156118b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900460ff1615151561195e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f70617573656420737461747573206d75737420626520646966666572656e742081526020017f7468616e2063757272656e74000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001905090565b60003373ffffffffffffffffffffffffffffffffffffffff166018600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611abf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f536f6c7574696f6e206973206e6f7420756e697175652e00000000000000000081525060200191505060405180910390fd5b6060604051908101604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250601860008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055509050507f01d5f9f5a890e5385b4f1d07d3c8c1f739f82bb433ed461d4551b7af3edc63408233604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a160019050919050565b505050565b6000611c0083836128c6565b611c66606060405190810160405280603f81526020017f68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e6381526020017f6f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f00815250836113db565b6001905092915050565b611c8c83838360206040519081016040528060008152506122ef565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611d1c6116a6565b82101515611d2957600080fd5b600a82815481101515611d3857fe5b90600052602060002001549050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b606060138054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e1f5780601f10611df457610100808354040283529160200191611e1f565b820191906000526020600020905b815481529060010190602001808311611e0257829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611ef5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f4552433732313a2062616c616e636520717565727920666f7220746865207a6581526020017f726f20616464726573730000000000000000000000000000000000000000000081525060400191505060405180910390fd5b601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612000576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b61200a60006128e7565b565b60006120188383611bf4565b506001905092915050565b606060128054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120bb5780601f10612090576101008083540402835291602001916120bb565b820191906000526020600020905b81548152906001019060200180831161209e57829003601f168201915b5050505050905090565b60606120d0826125fb565b15156120db57600080fd5b60606120ef846120ea8561266d565b6127c6565b90508091505092915050565b6000808214151515612175576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f506c6561736520656e74657220616e2076616c696420746f6b656e204964000081525060200191505060405180910390fd5b6001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156121ee57600080fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6122fa8484846116b3565b612306848484846129e8565b151561231157600080fd5b818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156124cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900460ff161515612576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f70617573656420737461747573206d75737420626520646966666572656e742081526020017f7468616e2063757272656e74000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600260006101000a81548160ff0219169083151502179055507fff2b959f2bcdb44c7ecb4b16dae055431019d7350607125cfc2b74a06632c90e33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001905090565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b606060008214156126b5576040805190810160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506127c1565b600082905060005b6000821415156126e3578080600101915050600a828115156126db57fe5b0491506126bd565b6060816040519080825280601f01601f1916602001820160405280156127185781602001600182028038833980820191505090505b50905060006001830390505b6000861415156127b957600a8681151561273a57fe5b066030017f01000000000000000000000000000000000000000000000000000000000000000282828060019003935081518110151561277557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868115156127b157fe5b049550612724565b819450505050505b919050565b60606128058383602060405190810160405280600081525060206040519081016040528060008152506020604051908101604052806000815250612c0b565b905092915050565b60008061281983611d4a565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061288857508373ffffffffffffffffffffffffffffffffffffffff1661287084611166565b73ffffffffffffffffffffffffffffffffffffffff16145b8061289957506128988185612372565b5b91505092915050565b6128ad838383613026565b6128b7838261337b565b6128c1828261351f565b505050565b6128d082826135e6565b6128da828261351f565b6128e381613781565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08183604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000612a098473ffffffffffffffffffffffffffffffffffffffff166137cd565b1515612a185760019050612c03565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612b0f578082015181840152602081019050612af4565b50505050905090810190601f168015612b3c5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612b5e57600080fd5b505af1158015612b72573d6000803e3d6000fd5b505050506040513d6020811015612b8857600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612c675781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612d31578881815181101515612c9557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612cf457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612c7e565b600090505b8751811015612de9578781815181101515612d4d57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612dac57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612d36565b600090505b8651811015612ea1578681815181101515612e0557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612e6457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612dee565b600090505b8551811015612f59578581815181101515612ebd57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612f1c57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612ea6565b600090505b8451811015613011578481815181101515612f7557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612fd457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f5e565b82995050505050505050505095945050505050565b6004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515613122576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f66726f6d2061646472657373206d75737420626520746865206f776e6572206f81526020017f662074686520676976656e20746f6b656e00000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156131ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f53656e64696e672061646472657373206d75737420626520612076616c69642081526020017f616464726573730000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061331b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613819565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006133d36001600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061382f90919063ffffffff16565b905060006009600084815260200190815260200160002054905081811415156134c6576000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561344457fe5b9060005260206000200154905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561349e57fe5b9060005260206000200181905550816009600083815260200190815260200160002081905550505b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003613518919061393b565b5050505050565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506009600083815260200190815260200160002081905550600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6135ef816125fb565b1515613689576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001807f746f6b656e496420616c726561647920657869737473206f7220676976656e2081526020017f6164647265737320697320696e76616c6964000000000000000000000000000081525060400191505060405180910390fd5b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613722600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613819565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600a80549050600b600083815260200190815260200160002081905550600a81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4706001029050833f9150808214158015613810575060006001028214155b92505050919050565b6001816000016000828254019250508190555050565b600061387183836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613879565b905092915050565b60008383111582901515613928576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156138ed5780820151818401526020810190506138d2565b50505050905090810190601f16801561391a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b815481835581811115613962578183600052602060002091820191016139619190613967565b5b505050565b61398991905b8082111561398557600081600090555060010161396d565b5090565b9056fea165627a7a723058201d2fdc90f88d0a726d377dfd39adbcaa6b923934fde5304256668bb224aeea4a0029",
  "deployedBytecode": "0x608060405260043610610175576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461017a57806306fdde03146101ec578063081812fc1461027c578063095ea7b3146102f757806309a3beef146103525780630a2766801461042457806318160ddd1461047f57806323b872dd146104aa57806327dc297e146105255780632f745c59146105f7578063320b2ad9146106665780633474e94e1461069557806338bbfa50146106e857806340c10f191461085157806342842e0e146108c45780634c1b1c931461093f5780634f6ccce7146109965780636352211e146109e55780636c0360eb14610a6057806370a0823114610af0578063715018a614610b5557806379c6506814610b6c57806395d89b4114610bdf5780639b330cb914610c6f578063a123c33e14610dba578063a22cb46514610e35578063b88d4fde14610e92578063e985e9c514610fa4578063fc8234cb1461102d575b600080fd5b34801561018657600080fd5b506101d26004803603602081101561019d57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061105c565b604051808215151515815260200191505060405180910390f35b3480156101f857600080fd5b506102016110c4565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610241578082015181840152602081019050610226565b50505050905090810190601f16801561026e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028857600080fd5b506102b56004803603602081101561029f57600080fd5b8101908080359060200190929190505050611166565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030357600080fd5b506103506004803603604081101561031a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061121b565b005b34801561035e57600080fd5b506104226004803603604081101561037557600080fd5b810190808035906020019064010000000081111561039257600080fd5b8201836020820111156103a457600080fd5b803590602001918460018302840111640100000000831117156103c657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291905050506113db565b005b34801561043057600080fd5b5061047d6004803603604081101561044757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611406565b005b34801561048b57600080fd5b506104946116a6565b6040518082815260200191505060405180910390f35b3480156104b657600080fd5b50610523600480360360608110156104cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116b3565b005b34801561053157600080fd5b506105f56004803603604081101561054857600080fd5b81019080803590602001909291908035906020019064010000000081111561056f57600080fd5b82018360208201111561058157600080fd5b803590602001918460018302840111640100000000831117156105a357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611733565b005b34801561060357600080fd5b506106506004803603604081101561061a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611776565b6040518082815260200191505060405180910390f35b34801561067257600080fd5b5061067b6117ed565b604051808215151515815260200191505060405180910390f35b3480156106a157600080fd5b506106ce600480360360208110156106b857600080fd5b81019080803590602001909291905050506119e3565b604051808215151515815260200191505060405180910390f35b3480156106f457600080fd5b5061084f6004803603606081101561070b57600080fd5b81019080803590602001909291908035906020019064010000000081111561073257600080fd5b82018360208201111561074457600080fd5b8035906020019184600183028401116401000000008311171561076657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156107c957600080fd5b8201836020820111156107db57600080fd5b803590602001918460018302840111640100000000831117156107fd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611bef565b005b34801561085d57600080fd5b506108aa6004803603604081101561087457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611bf4565b604051808215151515815260200191505060405180910390f35b3480156108d057600080fd5b5061093d600480360360608110156108e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c70565b005b34801561094b57600080fd5b50610954611cec565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109a257600080fd5b506109cf600480360360208110156109b957600080fd5b8101908080359060200190929190505050611d12565b6040518082815260200191505060405180910390f35b3480156109f157600080fd5b50610a1e60048036036020811015610a0857600080fd5b8101908080359060200190929190505050611d4a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a6c57600080fd5b50610a75611d87565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ab5578082015181840152602081019050610a9a565b50505050905090810190601f168015610ae25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610afc57600080fd5b50610b3f60048036036020811015610b1357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e29565b6040518082815260200191505060405180910390f35b348015610b6157600080fd5b50610b6a611f3c565b005b348015610b7857600080fd5b50610bc560048036036040811015610b8f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061200c565b604051808215151515815260200191505060405180910390f35b348015610beb57600080fd5b50610bf4612023565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c34578082015181840152602081019050610c19565b50505050905090810190601f168015610c615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610c7b57600080fd5b50610d3f60048036036040811015610c9257600080fd5b8101908080359060200190640100000000811115610caf57600080fd5b820183602082011115610cc157600080fd5b80359060200191846001830284011164010000000083111715610ce357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291905050506120c5565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d7f578082015181840152602081019050610d64565b50505050905090810190601f168015610dac5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610dc657600080fd5b50610df360048036036020811015610ddd57600080fd5b81019080803590602001909291905050506120fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e4157600080fd5b50610e9060048036036040811015610e5857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506121b3565b005b348015610e9e57600080fd5b50610fa260048036036080811015610eb557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610f1c57600080fd5b820183602082011115610f2e57600080fd5b80359060200191846001830284011164010000000083111715610f5057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506122ef565b005b348015610fb057600080fd5b5061101360048036036040811015610fc757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612372565b604051808215151515815260200191505060405180910390f35b34801561103957600080fd5b50611042612406565b604051808215151515815260200191505060405180910390f35b600060036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561115c5780601f106111315761010080835404028352916020019161115c565b820191906000526020600020905b81548152906001019060200180831161113f57829003601f168201915b5050505050905090565b60008082141515156111e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e4964206d7573742062652076616c6964000000000000000000000081525060200191505060405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061122682611d4a565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156112f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6581526020017f720000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061133257506113318133612372565b5b15156113cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7781526020017f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000081525060400191505060405180910390fd5b6113d6838361121b565b505050565b6113e4816125fb565b15156113ef57600080fd5b611401826113fc8361266d565b6127c6565b505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156114ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611595576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4e6577206f776e6572206d75737420626520612076616c69642061646472657381526020017f730000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b816001600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000600a80549050905090565b6116bd338261280d565b15156116c857600080fd5b6116d38383836128a2565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b611772828260006040519080825280601f01601f19166020018201604052801561176c5781602001600182028038833980820191505090505b50611bef565b5050565b600061178183611e29565b8210151561178e57600080fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156117da57fe5b9060005260206000200154905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156118b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900460ff1615151561195e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f70617573656420737461747573206d75737420626520646966666572656e742081526020017f7468616e2063757272656e74000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001905090565b60003373ffffffffffffffffffffffffffffffffffffffff166018600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611abf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f536f6c7574696f6e206973206e6f7420756e697175652e00000000000000000081525060200191505060405180910390fd5b6060604051908101604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250601860008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055509050507f01d5f9f5a890e5385b4f1d07d3c8c1f739f82bb433ed461d4551b7af3edc63408233604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a160019050919050565b505050565b6000611c0083836128c6565b611c66606060405190810160405280603f81526020017f68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e6381526020017f6f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f00815250836113db565b6001905092915050565b611c8c83838360206040519081016040528060008152506122ef565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611d1c6116a6565b82101515611d2957600080fd5b600a82815481101515611d3857fe5b90600052602060002001549050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b606060138054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e1f5780601f10611df457610100808354040283529160200191611e1f565b820191906000526020600020905b815481529060010190602001808311611e0257829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611ef5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f4552433732313a2062616c616e636520717565727920666f7220746865207a6581526020017f726f20616464726573730000000000000000000000000000000000000000000081525060400191505060405180910390fd5b601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612000576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b61200a60006128e7565b565b60006120188383611bf4565b506001905092915050565b606060128054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120bb5780601f10612090576101008083540402835291602001916120bb565b820191906000526020600020905b81548152906001019060200180831161209e57829003601f168201915b5050505050905090565b60606120d0826125fb565b15156120db57600080fd5b60606120ef846120ea8561266d565b6127c6565b90508091505092915050565b6000808214151515612175576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f506c6561736520656e74657220616e2076616c696420746f6b656e204964000081525060200191505060405180910390fd5b6001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156121ee57600080fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6122fa8484846116b3565b612306848484846129e8565b151561231157600080fd5b818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156124cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900460ff161515612576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f70617573656420737461747573206d75737420626520646966666572656e742081526020017f7468616e2063757272656e74000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600260006101000a81548160ff0219169083151502179055507fff2b959f2bcdb44c7ecb4b16dae055431019d7350607125cfc2b74a06632c90e33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001905090565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b606060008214156126b5576040805190810160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506127c1565b600082905060005b6000821415156126e3578080600101915050600a828115156126db57fe5b0491506126bd565b6060816040519080825280601f01601f1916602001820160405280156127185781602001600182028038833980820191505090505b50905060006001830390505b6000861415156127b957600a8681151561273a57fe5b066030017f01000000000000000000000000000000000000000000000000000000000000000282828060019003935081518110151561277557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868115156127b157fe5b049550612724565b819450505050505b919050565b60606128058383602060405190810160405280600081525060206040519081016040528060008152506020604051908101604052806000815250612c0b565b905092915050565b60008061281983611d4a565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061288857508373ffffffffffffffffffffffffffffffffffffffff1661287084611166565b73ffffffffffffffffffffffffffffffffffffffff16145b8061289957506128988185612372565b5b91505092915050565b6128ad838383613026565b6128b7838261337b565b6128c1828261351f565b505050565b6128d082826135e6565b6128da828261351f565b6128e381613781565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08183604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000612a098473ffffffffffffffffffffffffffffffffffffffff166137cd565b1515612a185760019050612c03565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612b0f578082015181840152602081019050612af4565b50505050905090810190601f168015612b3c5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612b5e57600080fd5b505af1158015612b72573d6000803e3d6000fd5b505050506040513d6020811015612b8857600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612c675781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612d31578881815181101515612c9557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612cf457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612c7e565b600090505b8751811015612de9578781815181101515612d4d57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612dac57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612d36565b600090505b8651811015612ea1578681815181101515612e0557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612e6457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612dee565b600090505b8551811015612f59578581815181101515612ebd57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612f1c57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612ea6565b600090505b8451811015613011578481815181101515612f7557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612fd457fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f5e565b82995050505050505050505095945050505050565b6004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515613122576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f66726f6d2061646472657373206d75737420626520746865206f776e6572206f81526020017f662074686520676976656e20746f6b656e00000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156131ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f53656e64696e672061646472657373206d75737420626520612076616c69642081526020017f616464726573730000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061331b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613819565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006133d36001600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061382f90919063ffffffff16565b905060006009600084815260200190815260200160002054905081811415156134c6576000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561344457fe5b9060005260206000200154905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561349e57fe5b9060005260206000200181905550816009600083815260200190815260200160002081905550505b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003613518919061393b565b5050505050565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506009600083815260200190815260200160002081905550600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6135ef816125fb565b1515613689576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001807f746f6b656e496420616c726561647920657869737473206f7220676976656e2081526020017f6164647265737320697320696e76616c6964000000000000000000000000000081525060400191505060405180910390fd5b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613722600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613819565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600a80549050600b600083815260200190815260200160002081905550600a81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4706001029050833f9150808214158015613810575060006001028214155b92505050919050565b6001816000016000828254019250508190555050565b600061387183836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613879565b905092915050565b60008383111582901515613928576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156138ed5780820151818401526020810190506138d2565b50505050905090810190601f16801561391a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b815481835581811115613962578183600052602060002091820191016139619190613967565b5b505050565b61398991905b8082111561398557600081600090555060010161396d565b5090565b9056fea165627a7a723058201d2fdc90f88d0a726d377dfd39adbcaa6b923934fde5304256668bb224aeea4a0029",
  "sourceMap": "212:1975:3:-;;;347:190;8:9:-1;5:2;;;30:1;27;20:12;5:2;347:190:3;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;347:190:3;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;347:190:3;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;347:190:3;;;;;;442:4;448:6;24395:4:0;24401:6;21795:297;;;;;;;;;;;;;;;;;;;;;;;1310:10;1301:6;;:19;;;;;;;;;;;;;;;;;;1336:42;1357:10;1370:6;;;;;;;;;;;1336:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3190:5;3180:7;;:15;;;;;;;;;;;;;;;;;;4490:40;4087:10;4509:20;;4490:18;;;:40;;;:::i;:::-;6635;6509:10;6654:20;;6635:18;;;:40;;;:::i;:::-;14345:51;13951:10;14364:31;;14345:18;;;:51;;;:::i;:::-;21950:4;21942:5;:12;;;;;;;;;;;;:::i;:::-;;21978:6;21968:7;:16;;;;;;;;;;;;:::i;:::-;;22014:12;21998:13;:28;;;;;;;;;;;;:::i;:::-;;22036:49;21606:10;22055:29;;22036:18;;;:49;;;:::i;:::-;21795:297;;;24318:214;;514:15:3;488:14;;:42;;;;;;;;;;;;;;;;;;347:190;;;212:1975;;4840:158:0;4930:10;4915:25;;:11;:25;;;;;4907:34;;;;;;;;4987:4;4951:20;:33;4972:11;4951:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;4840:158;:::o;212:1975:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "212:1975:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:133:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4628:133:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4628:133:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22288:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22288:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22288:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7854:223;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7854:223:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7854:223:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22486:379;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22486:379:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22486:379:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23591:180;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23591:180:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23591:180:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;23591:180:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;23591:180:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;23591:180:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23591:180:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:280;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1767:280:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1767:280:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15110:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15110:94:0;;;;;;;;;;;;;;;;;;;;;;;9054:222;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9054:222:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9054:222:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14800:122:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14800:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14800:122:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14800:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14800:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14800:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14800:122:2;;;;;;;;;;;;;;;;;;14776:182:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14776:182:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14776:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3671:165;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3671:165:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1039:294:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1039:294:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1039:294:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14928:166:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14928:166:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14928:166:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14928:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14928:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14928:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14928:166:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14928:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14928:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14928:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14928:166:2;;;;;;;;;;;;;;;;;;24835:222:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24835:222:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24835:222:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9282:174;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9282:174:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9282:174:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:30:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;308:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;15541:148:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15541:148:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15541:148:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6980:162;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6980:162:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6980:162:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22180:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22180:103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22180:103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25062:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25062:188:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;25062:188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:84;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1622:84:0;;;;;;1420:765:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1420:765:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1420:765:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22385:96:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22385:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22385:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22870:249;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22870:249:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22870:249:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;22870:249:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;22870:249:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;22870:249:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;22870:249:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22870:249:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2057:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2057:188:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2057:188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8369:213;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8369:213:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8369:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9462:253;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9462:253:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;9462:253:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;9462:253:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9462:253:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9462:253:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9462:253:0;;;;;;;;;;;;;;;;;;8903:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8903:145:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8903:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3846:163:0;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:133;4698:4;4721:20;:33;4742:11;4721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;4714:40;;4628:133;;;:::o;22288:92::-;22327:13;22368:5;22361:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22288:92;:::o;7854:223::-;7913:7;8002:1;7991:7;:12;;7983:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8046:15;:24;8062:7;8046:24;;;;;;;;;;;;;;;;;;;;;8039:31;;7854:223;;;:::o;22486:379::-;22549:13;22565:23;22580:7;22565:14;:23::i;:::-;22549:39;;22612:5;22606:11;;:2;:11;;;;22598:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22701:5;22687:19;;:10;:19;;;:58;;;;22710:35;22727:5;22734:10;22710:16;:35::i;:::-;22687:58;22666:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22838:20;22846:2;22850:7;22838;:20::i;:::-;22486:379;;;:::o;23591:180::-;23681:16;23689:7;23681;:16::i;:::-;23673:25;;;;;;;;23708:56;23732:12;23746:17;23755:7;23746:8;:17::i;:::-;23708:23;:56::i;:::-;;23591:180;;:::o;1767:280::-;1552:10;1541:21;;:6;;;;;;;;;;;:21;;;1533:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:1;1868:22;;:8;:22;;;;1860:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1971:8;1942:6;:15;1949:7;1942:15;;;;;;;;;;;:26;;;:37;;;;;;;;;;;;;;;;;;1998:38;2019:6;;;;;;;;;;;2027:8;1998:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:280;;:::o;15110:94::-;15154:7;15180:10;:17;;;;15173:24;;15110:94;:::o;9054:222::-;9144:39;9163:10;9175:7;9144:18;:39::i;:::-;9136:48;;;;;;;;9195:32;9209:4;9215:2;9219:7;9195:13;:32::i;:::-;9261:7;9257:2;9242:27;;9251:4;9242:27;;;;;;;;;;;;9054:222;;;:::o;14800:122:2:-;14875:40;14886:5;14893:7;14912:1;14902:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14902:12:2;;;;14875:10;:40::i;:::-;14800:122;;:::o;14776:182:0:-;14856:7;14891:16;14901:5;14891:9;:16::i;:::-;14883:5;:24;14875:33;;;;;;;;14925:12;:19;14938:5;14925:19;;;;;;;;;;;;;;;14945:5;14925:26;;;;;;;;;;;;;;;;;;14918:33;;14776:182;;;;:::o;3671:165::-;3729:4;1552:10;1541:21;;:6;;;;;;;;;;;:21;;;1533:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:7;;;;;;;;;;;3359:8;3351:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3759:4;3749:7;;:14;;;;;;;;;;;;;;;;;;3782:18;3789:10;3782:18;;;;;;;;;;;;;;;;;;;;;;3821:4;3814:11;;3671:165;:::o;1039:294:3:-;1096:4;1147:10;1115:42;;:15;:20;1131:3;1115:20;;;;;;;;;;;:28;;;;;;;;;;;;:42;;;;1107:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:58;;;;;;;;;1231:3;1214:58;;;;1245:10;1214:58;;;;;;1266:4;1214:58;;;;;1191:15;:20;1207:3;1191:20;;;;;;;;;;;:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1283:30;1297:3;1302:10;1283:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;1326:4;1319:11;;1039:294;;;:::o;14928:166:2:-;;;;:::o;24835:222:0:-;24893:4;24908:24;24920:2;24924:7;24908:11;:24::i;:::-;24942:87;;;;;;;;;;;;;;;;;;;;;;;;25021:7;24942:11;:87::i;:::-;25046:4;25039:11;;24835:222;;;;:::o;9282:174::-;9368:39;9385:4;9391:2;9395:7;9368:39;;;;;;;;;;;;;:16;:39::i;:::-;9441:7;9437:2;9422:27;;9431:4;9422:27;;;;;;;;;;;;9282:174;;;:::o;308:30:3:-;;;;;;;;;;;;;:::o;15541:148:0:-;15599:7;15634:13;:11;:13::i;:::-;15626:5;:21;15618:30;;;;;;;;15665:10;15676:5;15665:17;;;;;;;;;;;;;;;;;;15658:24;;15541:148;;;:::o;6980:162::-;7035:7;7115:11;:20;7127:7;7115:20;;;;;;;;;;;;;;;;;;;;;7108:27;;6980:162;;;:::o;22180:103::-;22222:13;22263;22256:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22180:103;:::o;25062:188::-;25117:7;25161:1;25144:19;;:5;:19;;;;25136:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25227:9;:16;25237:5;25227:16;;;;;;;;;;;;;;;;25220:23;;25062:188;;;:::o;1622:84::-;1552:10;1541:21;;:6;;;;;;;;;;;:21;;;1533:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1678:21;1696:1;1678:9;:21::i;:::-;1622:84::o;1420:765:3:-;1690:4;1720:16;1725:2;1728:7;1720:4;:16::i;:::-;;1753:4;1746:11;;1420:765;;;;:::o;22385:96:0:-;22426:13;22467:7;22460:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22385:96;:::o;22870:249::-;22949:13;22981:16;22989:7;22981;:16::i;:::-;22973:25;;;;;;;;23009:20;23032:56;23056:12;23070:17;23079:7;23070:8;:17::i;:::-;23032:23;:56::i;:::-;23009:79;;23106:6;23099:13;;;22870:249;;;;:::o;2057:188::-;2110:7;2151:1;2140:7;:12;;2132:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:6;:15;2215:7;2208:15;;;;;;;;;;;:26;;;;;;;;;;;;2201:33;;2057:188;;;:::o;8369:213::-;8454:10;8448:16;;:2;:16;;;;8440:25;;;;;;;;8512:8;8475:18;:30;8494:10;8475:30;;;;;;;;;;;;;;;:34;8506:2;8475:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;8562:2;8535:40;;8550:10;8535:40;;;8566:8;8535:40;;;;;;;;;;;;;;;;;;;;;;8369:213;;:::o;9462:253::-;9568:31;9581:4;9587:2;9591:7;9568:12;:31::i;:::-;9617:48;9640:4;9646:2;9650:7;9659:5;9617:22;:48::i;:::-;9609:57;;;;;;;;9700:7;9696:2;9681:27;;9690:4;9681:27;;;;;;;;;;;;9462:253;;;;:::o;8903:145::-;8983:4;9006:18;:25;9025:5;9006:25;;;;;;;;;;;;;;;:35;9032:8;9006:35;;;;;;;;;;;;;;;;;;;;;;;;;8999:42;;8903:145;;;;:::o;3846:163::-;3899:4;1552:10;1541:21;;:6;;;;;;;;;;;:21;;;1533:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3493:7;;;;;;;;;;;3485:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3929:5;3919:7;;:15;;;;;;;;;;;;;;;;;;3953:20;3962:10;3953:20;;;;;;;;;;;;;;;;;;;;;;3994:4;3987:11;;3846:163;:::o;9909:161::-;9966:4;9982:13;9998:11;:20;10010:7;9998:20;;;;;;;;;;;;;;;;;;;;;9982:36;;10052:1;10035:19;;:5;:19;;;;10028:26;;;9909:161;;;:::o;43270:465:2:-;43320:27;43369:1;43363:2;:7;43359:48;;;43386:10;;;;;;;;;;;;;;;;;;;;;;43359:48;43416:6;43425:2;43416:11;;43437:8;43455:66;43467:1;43462;:6;;43455:66;;;43484:5;;;;;;;43508:2;43503:7;;;;;;;;;;;43455:66;;;43530:17;43560:3;43550:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43550:14:2;;;;43530:34;;43574:6;43589:1;43583:3;:7;43574:16;;43600:100;43613:1;43607:2;:7;;43600:100;;;43663:2;43658;:7;;;;;;;;43653:2;:12;43642:25;;43630:4;43635:3;;;;;;;43630:9;;;;;;;;;;;;;;:37;;;;;;;;;;;43687:2;43681:8;;;;;;;;;;;43600:100;;;43723:4;43709:19;;;;;;43270:465;;;;:::o;39711:166::-;39789:33;39841:29;39851:2;39855;39841:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39834:36;;39711:166;;;;:::o;10430:246:0:-;10515:4;10531:13;10547:16;10555:7;10547;:16::i;:::-;10531:32;;10592:5;10581:16;;:7;:16;;;:51;;;;10625:7;10601:31;;:20;10613:7;10601:11;:20::i;:::-;:31;;;10581:51;:87;;;;10636:32;10653:5;10660:7;10636:16;:32::i;:::-;10581:87;10573:96;;;10430:246;;;;:::o;16064:239::-;16149:38;16169:4;16175:2;16179:7;16149:19;:38::i;:::-;16198:47;16231:4;16237:7;16198:32;:47::i;:::-;16256:40;16284:2;16288:7;16256:27;:40::i;:::-;16064:239;;;:::o;16558:196::-;16621:24;16633:2;16637:7;16621:11;:24::i;:::-;16656:40;16684:2;16688:7;16656:27;:40::i;:::-;16707;16739:7;16707:31;:40::i;:::-;16558:196;;:::o;2254:169::-;2309:16;2328:6;;;;;;;;;;;2309:25;;2353:8;2344:6;;:17;;;;;;;;;;;;;;;;;;2376:40;2397:8;2407;2376:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:169;;:::o;12796:347::-;12917:4;12942:15;:2;:13;;;:15::i;:::-;12941:16;12937:58;;;12980:4;12973:11;;;;12937:58;13005:13;13037:2;13021:36;;;13058:10;13070:4;13076:7;13085:5;13021:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13021:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13021:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13021:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13021:70:0;;;;;;;;;;;;;;;;13005:86;;5643:10;13119:16;;13109:26;;;:6;:26;;;;13101:35;;;12796:347;;;;;;;:::o;40281:1020:2:-;40413:33;40458:16;40483:2;40458:28;;40496:16;40521:2;40496:28;;40534:16;40559:2;40534:28;;40572:16;40597:2;40572:28;;40610:16;40635:2;40610:28;;40648:19;40733:3;:10;40720:3;:10;40707:3;:10;40694:3;:10;40681:3;:10;:23;:36;:49;:62;40670:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40670:74:2;;;;40648:96;;40754:19;40782:5;40754:34;;40798:6;40807:1;40798:10;;40818:6;40827:1;40818:10;;40847:1;40843:5;;40838:78;40854:3;:10;40850:1;:14;40838:78;;;40899:3;40903:1;40899:6;;;;;;;;;;;;;;;;;;;;40885;40892:3;;;;;;40885:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40866:3;;;;;;;40838:78;;;40934:1;40930:5;;40925:78;40941:3;:10;40937:1;:14;40925:78;;;40986:3;40990:1;40986:6;;;;;;;;;;;;;;;;;;;;40972;40979:3;;;;;;40972:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40953:3;;;;;;;40925:78;;;41021:1;41017:5;;41012:78;41028:3;:10;41024:1;:14;41012:78;;;41073:3;41077:1;41073:6;;;;;;;;;;;;;;;;;;;;41059;41066:3;;;;;;41059:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41040:3;;;;;;;41012:78;;;41108:1;41104:5;;41099:78;41115:3;:10;41111:1;:14;41099:78;;;41160:3;41164:1;41160:6;;;;;;;;;;;;;;;;;;;;41146;41153:3;;;;;;41146:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41127:3;;;;;;;41099:78;;;41195:1;41191:5;;41186:78;41202:3;:10;41198:1;:14;41186:78;;;41247:3;41251:1;41247:6;;;;;;;;;;;;;;;;;;;;41233;41240:3;;;;;;41233:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41214:3;;;;;;;41186:78;;;41287:6;41273:21;;;;;;;;;;;40281:1020;;;;;;;:::o;11533:735:0:-;11710:11;:20;11722:7;11710:20;;;;;;;;;;;;;;;;;;;;;11702:28;;:4;:28;;;11694:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11889:1;11875:16;;:2;:16;;;;11867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12010:4;11979:18;:24;11998:4;11979:24;;;;;;;;;;;;;;;:28;12004:2;11979:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;12126:2;12103:11;:20;12115:7;12103:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12142:41;12161:17;:21;12179:2;12161:21;;;;;;;;;;;;;;;12142:18;:41::i;:::-;12253:7;12249:2;12234:27;;12243:4;12234:27;;;;;;;;;;;;11533:735;;;:::o;18530:1128::-;18792:22;18817:32;18847:1;18817:12;:18;18830:4;18817:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;18792:57;;18859:18;18880:17;:26;18898:7;18880:26;;;;;;;;;;;;18859:47;;19024:14;19010:10;:28;;19006:323;;;19054:19;19076:12;:18;19089:4;19076:18;;;;;;;;;;;;;;;19095:14;19076:34;;;;;;;;;;;;;;;;;;19054:56;;19158:11;19125:12;:18;19138:4;19125:18;;;;;;;;;;;;;;;19144:10;19125:30;;;;;;;;;;;;;;;;;:44;;;;19274:10;19241:17;:30;19259:11;19241:30;;;;;;;;;;;:43;;;;19006:323;;19415:12;:18;19428:4;19415:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;18530:1128;;;;:::o;17376:183::-;17489:12;:16;17502:2;17489:16;;;;;;;;;;;;;;;:23;;;;17460:17;:26;17478:7;17460:26;;;;;;;;;;;:52;;;;17522:12;:16;17535:2;17522:16;;;;;;;;;;;;;;;17544:7;17522:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17522:30:0;;;;;;;;;;;;;;;;;;;;;;17376:183;;:::o;10833:497::-;10992:16;11000:7;10992;:16::i;:::-;10984:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11178:2;11155:11;:20;11167:7;11155:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11194:41;11213:17;:21;11231:2;11213:21;;;;;;;;;;;;;;;11194:18;:41::i;:::-;11315:7;11311:2;11290:33;;11299:10;11290:33;;;;;;;;;;;;10833:497;;:::o;17754:161::-;17857:10;:17;;;;17830:15;:24;17846:7;17830:24;;;;;;;;;;;:44;;;;17884:10;17900:7;17884:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17884:24:0;;;;;;;;;;;;;;;;;;;;;;17754:161;:::o;686:610:12:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1183:178:6:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:8:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;212:1975:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.5.0;\nimport \"../../zokrates/code/square/verifier.sol\";\nimport \"./ERC721Mintable.sol\";\n\n\n\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is ERC721Full{\n    \n    // Zokrates generated solidity contract\n    Verifier public squareVerifier;\n\n \n    constructor(address verifierAddress, string memory name, string memory symbol) \n    ERC721Full(name, symbol)\n        public\n    {   \n        squareVerifier = Verifier(verifierAddress);\n    }\n    \n// TODO define a solutions struct that can hold an index & an address\nstruct Solution{\n    bytes32 index;\n    address account;\n    bool isExist;\n}\n\n// TODO define an array of the above struct\n\n\n// TODO define a mapping to store unique solutions submitted\nmapping (bytes32 => Solution) uniqueSolutions;\n\n\n// TODO Create an event to emit when a solution is added\nevent SolutionAdded(bytes32 index, address account);\n\n \n// TODO Create a function to add the solutions to the array and emit the event\nfunction addSolutionsToArray(bytes32 key) public returns(bool){\n    require(uniqueSolutions[key].account != msg.sender, \"Solution is not unique.\");\n    uniqueSolutions[key] = Solution({index: key, account: msg.sender, isExist: true});\n    emit SolutionAdded(key, msg.sender);\n    return true;\n}\n\n\n// TODO Create a function to mint new NFT only after the solution has been verified\nfunction mintToken(\n            address to,\n            uint256 tokenId\n            // uint[2] memory a,\n            // uint[2][2] memory b,\n            // uint[2] memory c,\n            // uint[2] memory input)\n)               \n             public\n             returns (bool)\n              {\n        mint(to,tokenId);\n        return true;\n    // bytes32 key = keccak256(abi.encodePacked(a, b, c, input));\n\n    // if(!uniqueSolutions[key].isExist){\n    //   bool verification = squareVerifier.verifyTx(a, b, c,input);\n\n    //     if(verification){\n    //         addSolutionsToArray(key);\n    //         // require(index < totalSupply(), \"Invalid Token index\"); \n    //         //  - make sure you handle metadata as well as tokenSuplly\n    //     }\n    //   }\n    }\n}",
  "sourcePath": "C:/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7776
      ]
    },
    "id": 7777,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7677,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/C/projects/Blockchain-Capstone-NFT/zokrates/code/square/verifier.sol",
        "file": "../../zokrates/code/square/verifier.sol",
        "id": 7678,
        "nodeType": "ImportDirective",
        "scope": 7777,
        "sourceUnit": 8872,
        "src": "25:49:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7679,
        "nodeType": "ImportDirective",
        "scope": 7777,
        "sourceUnit": 1351,
        "src": "75:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7680,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1350,
              "src": "243:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1350",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 7681,
            "nodeType": "InheritanceSpecifier",
            "src": "243:10:3"
          }
        ],
        "contractDependencies": [
          263,
          217,
          135,
          1224,
          759,
          1350,
          1057,
          7675
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7776,
        "linearizedBaseContracts": [
          7776,
          1350,
          1224,
          7675,
          1057,
          759,
          263,
          217,
          135
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7683,
            "name": "squareVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7776,
            "src": "308:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8871",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7682,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8871,
              "src": "308:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8871",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7702,
              "nodeType": "Block",
              "src": "475:62:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7696,
                      "name": "squareVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7683,
                      "src": "488:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8871",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7698,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7685,
                          "src": "514:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7697,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8871,
                        "src": "505:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$8871_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "505:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8871",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "488:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8871",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7701,
                  "nodeType": "ExpressionStatement",
                  "src": "488:42:3"
                }
              ]
            },
            "documentation": null,
            "id": 7703,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7692,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7687,
                    "src": "442:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7693,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7689,
                    "src": "448:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7694,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7691,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1350,
                  "src": "431:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1350_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "431:24:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7685,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7703,
                  "src": "359:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7687,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7703,
                  "src": "384:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7686,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7689,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7703,
                  "src": "404:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7688,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "358:67:3"
            },
            "returnParameters": {
              "id": 7695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:3"
            },
            "scope": 7776,
            "src": "347:190:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7710,
            "members": [
              {
                "constant": false,
                "id": 7705,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7710,
                "src": "634:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7704,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "634:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7707,
                "name": "account",
                "nodeType": "VariableDeclaration",
                "scope": 7710,
                "src": "653:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7706,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "653:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7709,
                "name": "isExist",
                "nodeType": "VariableDeclaration",
                "scope": 7710,
                "src": "674:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7708,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "674:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7776,
            "src": "613:76:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7714,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7776,
            "src": "798:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7710_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7713,
              "keyType": {
                "id": 7711,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "807:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "798:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7710_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7712,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7710,
                "src": "818:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7710_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7720,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7716,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7720,
                  "src": "924:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7715,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7718,
                  "indexed": false,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 7720,
                  "src": "939:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "923:32:3"
            },
            "src": "904:52:3"
          },
          {
            "body": {
              "id": 7757,
              "nodeType": "Block",
              "src": "1101:232:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7728,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7714,
                              "src": "1115:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7710_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7730,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7729,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7722,
                              "src": "1131:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1115:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7710_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7731,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "account",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7707,
                          "src": "1115:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7732,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9376,
                            "src": "1147:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1147:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1115:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e206973206e6f7420756e697175652e",
                        "id": 7735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1159:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68e3d777e486467c3aae44680111336974a2f33582e02544c68239a1f637fbe3",
                          "typeString": "literal_string \"Solution is not unique.\""
                        },
                        "value": "Solution is not unique."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68e3d777e486467c3aae44680111336974a2f33582e02544c68239a1f637fbe3",
                          "typeString": "literal_string \"Solution is not unique.\""
                        }
                      ],
                      "id": 7727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9379,
                        9380
                      ],
                      "referencedDeclaration": 9380,
                      "src": "1107:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:78:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7737,
                  "nodeType": "ExpressionStatement",
                  "src": "1107:78:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7738,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7714,
                        "src": "1191:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7710_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7740,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7739,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7722,
                        "src": "1207:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1191:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7710_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7742,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7722,
                          "src": "1231:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7743,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9376,
                            "src": "1245:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1245:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1266:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7741,
                        "name": "Solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7710,
                        "src": "1214:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Solution_$7710_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                        }
                      },
                      "id": 7746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "index",
                        "account",
                        "isExist"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1214:58:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7710_memory",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1191:81:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7710_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7748,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:81:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7750,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7722,
                        "src": "1297:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7751,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9376,
                          "src": "1302:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1302:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7749,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7720,
                      "src": "1283:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7754,
                  "nodeType": "EmitStatement",
                  "src": "1278:35:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1326:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7726,
                  "id": 7756,
                  "nodeType": "Return",
                  "src": "1319:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolutionsToArray",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7722,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7758,
                  "src": "1068:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7721,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1067:13:3"
            },
            "returnParameters": {
              "id": 7726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7725,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7758,
                  "src": "1096:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7724,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1096:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1095:6:3"
            },
            "scope": 7776,
            "src": "1039:294:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7774,
              "nodeType": "Block",
              "src": "1710:475:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7768,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7760,
                        "src": "1725:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7769,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7762,
                        "src": "1728:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7767,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1271,
                      "src": "1720:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1720:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7771,
                  "nodeType": "ExpressionStatement",
                  "src": "1720:16:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1753:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7766,
                  "id": 7773,
                  "nodeType": "Return",
                  "src": "1746:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7775,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7760,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7775,
                  "src": "1452:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7762,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7775,
                  "src": "1476:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1438:194:3"
            },
            "returnParameters": {
              "id": 7766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7765,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7775,
                  "src": "1690:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7764,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1690:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1689:6:3"
            },
            "scope": 7776,
            "src": "1420:765:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7777,
        "src": "212:1975:3"
      }
    ],
    "src": "0:2187:3"
  },
  "legacyAST": {
    "absolutePath": "/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7776
      ]
    },
    "id": 7777,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7677,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/C/projects/Blockchain-Capstone-NFT/zokrates/code/square/verifier.sol",
        "file": "../../zokrates/code/square/verifier.sol",
        "id": 7678,
        "nodeType": "ImportDirective",
        "scope": 7777,
        "sourceUnit": 8872,
        "src": "25:49:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7679,
        "nodeType": "ImportDirective",
        "scope": 7777,
        "sourceUnit": 1351,
        "src": "75:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7680,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1350,
              "src": "243:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1350",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 7681,
            "nodeType": "InheritanceSpecifier",
            "src": "243:10:3"
          }
        ],
        "contractDependencies": [
          263,
          217,
          135,
          1224,
          759,
          1350,
          1057,
          7675
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7776,
        "linearizedBaseContracts": [
          7776,
          1350,
          1224,
          7675,
          1057,
          759,
          263,
          217,
          135
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7683,
            "name": "squareVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7776,
            "src": "308:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8871",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7682,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8871,
              "src": "308:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8871",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7702,
              "nodeType": "Block",
              "src": "475:62:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7696,
                      "name": "squareVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7683,
                      "src": "488:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8871",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7698,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7685,
                          "src": "514:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7697,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8871,
                        "src": "505:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$8871_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "505:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8871",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "488:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8871",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7701,
                  "nodeType": "ExpressionStatement",
                  "src": "488:42:3"
                }
              ]
            },
            "documentation": null,
            "id": 7703,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7692,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7687,
                    "src": "442:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7693,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7689,
                    "src": "448:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7694,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7691,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1350,
                  "src": "431:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1350_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "431:24:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7685,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7703,
                  "src": "359:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7687,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7703,
                  "src": "384:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7686,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7689,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7703,
                  "src": "404:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7688,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "358:67:3"
            },
            "returnParameters": {
              "id": 7695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:3"
            },
            "scope": 7776,
            "src": "347:190:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7710,
            "members": [
              {
                "constant": false,
                "id": 7705,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7710,
                "src": "634:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7704,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "634:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7707,
                "name": "account",
                "nodeType": "VariableDeclaration",
                "scope": 7710,
                "src": "653:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7706,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "653:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7709,
                "name": "isExist",
                "nodeType": "VariableDeclaration",
                "scope": 7710,
                "src": "674:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7708,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "674:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7776,
            "src": "613:76:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7714,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7776,
            "src": "798:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7710_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7713,
              "keyType": {
                "id": 7711,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "807:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "798:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7710_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7712,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7710,
                "src": "818:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7710_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7720,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7716,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7720,
                  "src": "924:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7715,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7718,
                  "indexed": false,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 7720,
                  "src": "939:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "923:32:3"
            },
            "src": "904:52:3"
          },
          {
            "body": {
              "id": 7757,
              "nodeType": "Block",
              "src": "1101:232:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7728,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7714,
                              "src": "1115:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7710_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7730,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7729,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7722,
                              "src": "1131:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1115:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7710_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7731,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "account",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7707,
                          "src": "1115:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7732,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9376,
                            "src": "1147:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1147:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1115:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e206973206e6f7420756e697175652e",
                        "id": 7735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1159:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68e3d777e486467c3aae44680111336974a2f33582e02544c68239a1f637fbe3",
                          "typeString": "literal_string \"Solution is not unique.\""
                        },
                        "value": "Solution is not unique."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68e3d777e486467c3aae44680111336974a2f33582e02544c68239a1f637fbe3",
                          "typeString": "literal_string \"Solution is not unique.\""
                        }
                      ],
                      "id": 7727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9379,
                        9380
                      ],
                      "referencedDeclaration": 9380,
                      "src": "1107:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:78:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7737,
                  "nodeType": "ExpressionStatement",
                  "src": "1107:78:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7738,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7714,
                        "src": "1191:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7710_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7740,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7739,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7722,
                        "src": "1207:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1191:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7710_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7742,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7722,
                          "src": "1231:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7743,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9376,
                            "src": "1245:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1245:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1266:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7741,
                        "name": "Solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7710,
                        "src": "1214:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Solution_$7710_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                        }
                      },
                      "id": 7746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "index",
                        "account",
                        "isExist"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1214:58:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7710_memory",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1191:81:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7710_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7748,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:81:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7750,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7722,
                        "src": "1297:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7751,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9376,
                          "src": "1302:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1302:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7749,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7720,
                      "src": "1283:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7754,
                  "nodeType": "EmitStatement",
                  "src": "1278:35:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1326:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7726,
                  "id": 7756,
                  "nodeType": "Return",
                  "src": "1319:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolutionsToArray",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7722,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7758,
                  "src": "1068:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7721,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1067:13:3"
            },
            "returnParameters": {
              "id": 7726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7725,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7758,
                  "src": "1096:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7724,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1096:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1095:6:3"
            },
            "scope": 7776,
            "src": "1039:294:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7774,
              "nodeType": "Block",
              "src": "1710:475:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7768,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7760,
                        "src": "1725:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7769,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7762,
                        "src": "1728:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7767,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1271,
                      "src": "1720:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1720:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7771,
                  "nodeType": "ExpressionStatement",
                  "src": "1720:16:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1753:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7766,
                  "id": 7773,
                  "nodeType": "Return",
                  "src": "1746:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7775,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7760,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7775,
                  "src": "1452:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7762,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7775,
                  "src": "1476:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1438:194:3"
            },
            "returnParameters": {
              "id": 7766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7765,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7775,
                  "src": "1690:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7764,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1690:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1689:6:3"
            },
            "scope": 7776,
            "src": "1420:765:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7777,
        "src": "212:1975:3"
      }
    ],
    "src": "0:2187:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xFb4EB8A8E105DB70D044c7447250a00eD7F77ffd",
      "transactionHash": "0x4349c690cf3ac0e979eab8f2e487453b78584c072836114a8e1b7ef6b0cf6b8b"
    }
  },
  "schemaVersion": "3.0.9",
  "updatedAt": "2021-07-27T19:40:07.689Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}