{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "baseTokenURI",
          "type": "string"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "baseURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_pause",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "squareVerifier",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "baseTokenURI",
          "type": "string"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_unpause",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "verifierAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "index",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "UnPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldOwer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "key",
          "type": "bytes32"
        }
      ],
      "name": "addSolutionsToArray",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mintToken",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"baseTokenURI\",\"type\":\"string\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"baseURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_pause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"addSolutionsToArray\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"squareVerifier\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"baseTokenURI\",\"type\":\"string\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_unpause\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"verifierAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"index\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"UnPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"oldOwer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x80cbae7d8325698f754b6e2b48ff27946d2e4a5d1b8f4b744095002bb21c088f\",\"urls\":[\"bzzr://226802a5162cef6e4f779490c2e817d61e56e7542bb5ae551eb952018135b252\"]},\"/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0x236afd0d6419539213bb7f60c86e4ac8ce08b5f9356442b10b502b2507634b2b\",\"urls\":[\"bzzr://31abd885f8c42fe3a48fcb72a3ae197cbed109a3c5beb03c6206247baa4b144a\"]},\"/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x52ceb943509fcc5a6d45b3c4a9dba3c874cc1156efb22d333ae5432003778cd2\",\"urls\":[\"bzzr://6894080abc620562f1d9b9e85fb44169852f606c3fb14b7ecfdcf0c96084f894\"]},\"/C/projects/Blockchain-Capstone-NFT/zokrates/code/square/verifier.sol\":{\"keccak256\":\"0x670cb110a3a9fe3588d3173479e5910c60422020974663de50cd17e7bb5bb2a5\",\"urls\":[\"bzzr://5733c93b1fe254a045f46785a7636e164864ae3c70cf8b257bd72bfa6c8571ad\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzzr://14f0ef90a240b2aca847fe1489b10965e04ba16cf221f52ed6470d0cad291f9d\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzzr://8a586d8fd1e36ecb1bebccdd5969e38fbf7d435cf9703ffc9647be8c97bf0d31\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x2b2b99dc7fe8fcd1f9427d00822b99cbc683dc21f5dd7532bd7e2281fd2c2ca2\",\"urls\":[\"bzzr://b89c69b072072e7fa1c8da973f82c7b28a64fb6bdc1e47626fedc89050ae783c\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xd8df7ffce6025f785967601ee94f79dae747b39917a9afbbb6fa299fe704065c\",\"urls\":[\"bzzr://8157b56cfb7905faec05ecf4cb2ae474c256ab5736598aaf322ca957383ff5ea\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405160208062003fc9833981018060405260208110156200003357600080fd5b81019080805190602001909291905050506040805190810160405280600b81526020017f52616669756c546f6b656e0000000000000000000000000000000000000000008152506040805190810160405280600381526020017f52544e0000000000000000000000000000000000000000000000000000000000815250606060405190810160405280603f81526020017f68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e6381526020017f6f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f00815250336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a16000600260006101000a81548160ff0219169083151502179055506200025d6301ffc9a77c010000000000000000000000000000000000000000000000000000000002620003aa640100000000026401000000009004565b6200029a6380ac58cd7c010000000000000000000000000000000000000000000000000000000002620003aa640100000000026401000000009004565b620002d763780e9d637c010000000000000000000000000000000000000000000000000000000002620003aa640100000000026401000000009004565b8260119080519060200190620002ef92919062000469565b5081601290805190602001906200030892919062000469565b5080601390805190602001906200032192919062000469565b506200035f635b5e139f7c010000000000000000000000000000000000000000000000000000000002620003aa640100000000026401000000009004565b50505080601760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000518565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614151515620003fc57600080fd5b600160036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004ac57805160ff1916838001178555620004dd565b82800160010185558215620004dd579182015b82811115620004dc578251825591602001919060010190620004bf565b5b509050620004ec9190620004f0565b5090565b6200051591905b8082111562000511576000816000905550600101620004f7565b5090565b90565b613aa180620005286000396000f3fe608060405260043610610174576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062ad800c1461017957806301ffc9a71461022d578063081812fc1461029f578063095ea7b31461031a57806309a3beef146103755780630a2766801461044757806318160ddd146104a257806323b872dd146104cd57806327dc297e146105485780632ccde4f61461061a5780632f745c59146106ce578063320b2ad91461073d5780633474e94e1461076c57806338bbfa50146107bf57806340c10f191461092857806342842e0e1461099b5780634c1b1c9314610a165780634e41a1fb14610a6d5780634f6ccce714610b215780636352211e14610b7057806370a0823114610beb578063715018a614610c5057806379c6506814610c675780639b330cb914610cda578063a123c33e14610e25578063a22cb46514610ea0578063b88d4fde14610efd578063e985e9c51461100f578063fc8234cb14611098575b600080fd5b34801561018557600080fd5b506101b26004803603602081101561019c57600080fd5b81019080803590602001909291905050506110c7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f25780820151818401526020810190506101d7565b50505050905090810190601f16801561021f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023957600080fd5b506102856004803603602081101561025057600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611193565b604051808215151515815260200191505060405180910390f35b3480156102ab57600080fd5b506102d8600480360360208110156102c257600080fd5b81019080803590602001909291905050506111fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032657600080fd5b506103736004803603604081101561033d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112b0565b005b34801561038157600080fd5b506104456004803603604081101561039857600080fd5b81019080803590602001906401000000008111156103b557600080fd5b8201836020820111156103c757600080fd5b803590602001918460018302840111640100000000831117156103e957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611470565b005b34801561045357600080fd5b506104a06004803603604081101561046a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061149b565b005b3480156104ae57600080fd5b506104b761173b565b6040518082815260200191505060405180910390f35b3480156104d957600080fd5b50610546600480360360608110156104f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611748565b005b34801561055457600080fd5b506106186004803603604081101561056b57600080fd5b81019080803590602001909291908035906020019064010000000081111561059257600080fd5b8201836020820111156105a457600080fd5b803590602001918460018302840111640100000000831117156105c657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506117c8565b005b34801561062657600080fd5b506106536004803603602081101561063d57600080fd5b810190808035906020019092919050505061180b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610693578082015181840152602081019050610678565b50505050905090810190601f1680156106c05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106da57600080fd5b50610727600480360360408110156106f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118d7565b6040518082815260200191505060405180910390f35b34801561074957600080fd5b5061075261194e565b604051808215151515815260200191505060405180910390f35b34801561077857600080fd5b506107a56004803603602081101561078f57600080fd5b8101908080359060200190929190505050611b44565b604051808215151515815260200191505060405180910390f35b3480156107cb57600080fd5b50610926600480360360608110156107e257600080fd5b81019080803590602001909291908035906020019064010000000081111561080957600080fd5b82018360208201111561081b57600080fd5b8035906020019184600183028401116401000000008311171561083d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156108a057600080fd5b8201836020820111156108b257600080fd5b803590602001918460018302840111640100000000831117156108d457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611d50565b005b34801561093457600080fd5b506109816004803603604081101561094b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611d55565b604051808215151515815260200191505060405180910390f35b3480156109a757600080fd5b50610a14600480360360608110156109be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611dd1565b005b348015610a2257600080fd5b50610a2b611e4d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a7957600080fd5b50610aa660048036036020811015610a9057600080fd5b8101908080359060200190929190505050611e73565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ae6578082015181840152602081019050610acb565b50505050905090810190601f168015610b135780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610b2d57600080fd5b50610b5a60048036036020811015610b4457600080fd5b8101908080359060200190929190505050611f3f565b6040518082815260200191505060405180910390f35b348015610b7c57600080fd5b50610ba960048036036020811015610b9357600080fd5b8101908080359060200190929190505050611f77565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610bf757600080fd5b50610c3a60048036036020811015610c0e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fb4565b6040518082815260200191505060405180910390f35b348015610c5c57600080fd5b50610c656120c7565b005b348015610c7357600080fd5b50610cc060048036036040811015610c8a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612197565b604051808215151515815260200191505060405180910390f35b348015610ce657600080fd5b50610daa60048036036040811015610cfd57600080fd5b8101908080359060200190640100000000811115610d1a57600080fd5b820183602082011115610d2c57600080fd5b80359060200191846001830284011164010000000083111715610d4e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291905050506121ae565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610dea578082015181840152602081019050610dcf565b50505050905090810190601f168015610e175780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610e3157600080fd5b50610e5e60048036036020811015610e4857600080fd5b81019080803590602001909291905050506121e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610eac57600080fd5b50610efb60048036036040811015610ec357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061229c565b005b348015610f0957600080fd5b5061100d60048036036080811015610f2057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610f8757600080fd5b820183602082011115610f9957600080fd5b80359060200191846001830284011164010000000083111715610fbb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506123d8565b005b34801561101b57600080fd5b5061107e6004803603604081101561103257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061245b565b604051808215151515815260200191505060405180910390f35b3480156110a457600080fd5b506110ad6124ef565b604051808215151515815260200191505060405180910390f35b60606110d2826126e4565b15156110dd57600080fd5b601460008381526020019081526020016000206000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111875780601f1061115c57610100808354040283529160200191611187565b820191906000526020600020905b81548152906001019060200180831161116a57829003601f168201915b50505050509050919050565b600060036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000808214151515611275576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e4964206d7573742062652076616c6964000000000000000000000081525060200191505060405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006112bb82611f77565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611387576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6581526020017f720000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806113c757506113c6813361245b565b5b1515611461576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7781526020017f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000081525060400191505060405180910390fd5b61146b83836112b0565b505050565b611479816126e4565b151561148457600080fd5b6114968261149183612756565b6128af565b505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561155f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561162a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4e6577206f776e6572206d75737420626520612076616c69642061646472657381526020017f730000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b816001600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000600a80549050905090565b61175233826128f6565b151561175d57600080fd5b61176883838361298b565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b611807828260006040519080825280601f01601f1916602001820160405280156118015781602001600182028038833980820191505090505b50611d50565b5050565b6060611816826126e4565b151561182157600080fd5b601460008381526020019081526020016000206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118cb5780601f106118a0576101008083540402835291602001916118cb565b820191906000526020600020905b8154815290600101906020018083116118ae57829003601f168201915b50505050509050919050565b60006118e283611fb4565b821015156118ef57600080fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561193b57fe5b9060005260206000200154905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611a14576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900460ff16151515611abf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f70617573656420737461747573206d75737420626520646966666572656e742081526020017f7468616e2063757272656e74000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001905090565b60003373ffffffffffffffffffffffffffffffffffffffff16601a600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611c20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f536f6c7574696f6e206973206e6f7420756e697175652e00000000000000000081525060200191505060405180910390fd5b6060604051908101604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250601a60008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055509050507f01d5f9f5a890e5385b4f1d07d3c8c1f739f82bb433ed461d4551b7af3edc63408233604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a160019050919050565b505050565b6000611d6183836129af565b611dc7606060405190810160405280603f81526020017f68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e6381526020017f6f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f0081525083611470565b6001905092915050565b611ded83838360206040519081016040528060008152506123d8565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060611e7e826126e4565b1515611e8957600080fd5b601460008381526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f335780601f10611f0857610100808354040283529160200191611f33565b820191906000526020600020905b815481529060010190602001808311611f1657829003601f168201915b50505050509050919050565b6000611f4961173b565b82101515611f5657600080fd5b600a82815481101515611f6557fe5b90600052602060002001549050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612080576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f4552433732313a2062616c616e636520717565727920666f7220746865207a6581526020017f726f20616464726573730000000000000000000000000000000000000000000081525060400191505060405180910390fd5b601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561218b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b61219560006129d0565b565b60006121a38383611d55565b506001905092915050565b60606121b9826126e4565b15156121c457600080fd5b60606121d8846121d385612756565b6128af565b90508091505092915050565b600080821415151561225e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f506c6561736520656e74657220616e2076616c696420746f6b656e204964000081525060200191505060405180910390fd5b6001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156122d757600080fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6123e3848484611748565b6123ef84848484612ad1565b15156123fa57600080fd5b818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156125b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900460ff16151561265f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f70617573656420737461747573206d75737420626520646966666572656e742081526020017f7468616e2063757272656e74000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600260006101000a81548160ff0219169083151502179055507fff2b959f2bcdb44c7ecb4b16dae055431019d7350607125cfc2b74a06632c90e33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001905090565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6060600082141561279e576040805190810160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506128aa565b600082905060005b6000821415156127cc578080600101915050600a828115156127c457fe5b0491506127a6565b6060816040519080825280601f01601f1916602001820160405280156128015781602001600182028038833980820191505090505b50905060006001830390505b6000861415156128a257600a8681151561282357fe5b066030017f01000000000000000000000000000000000000000000000000000000000000000282828060019003935081518110151561285e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681151561289a57fe5b04955061280d565b819450505050505b919050565b60606128ee8383602060405190810160405280600081525060206040519081016040528060008152506020604051908101604052806000815250612cf4565b905092915050565b60008061290283611f77565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061297157508373ffffffffffffffffffffffffffffffffffffffff16612959846111fb565b73ffffffffffffffffffffffffffffffffffffffff16145b806129825750612981818561245b565b5b91505092915050565b61299683838361310f565b6129a08382613464565b6129aa8282613608565b505050565b6129b982826136cf565b6129c38282613608565b6129cc8161386a565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08183604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000612af28473ffffffffffffffffffffffffffffffffffffffff166138b6565b1515612b015760019050612cec565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612bf8578082015181840152602081019050612bdd565b50505050905090810190601f168015612c255780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612c4757600080fd5b505af1158015612c5b573d6000803e3d6000fd5b505050506040513d6020811015612c7157600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612d505781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612e1a578881815181101515612d7e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612ddd57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612d67565b600090505b8751811015612ed2578781815181101515612e3657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612e9557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612e1f565b600090505b8651811015612f8a578681815181101515612eee57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612f4d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612ed7565b600090505b8551811015613042578581815181101515612fa657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561300557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f8f565b600090505b84518110156130fa57848181518110151561305e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156130bd57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613047565b82995050505050505050505095945050505050565b6004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151561320b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f66726f6d2061646472657373206d75737420626520746865206f776e6572206f81526020017f662074686520676976656e20746f6b656e00000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156132d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f53656e64696e672061646472657373206d75737420626520612076616c69642081526020017f616464726573730000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613404600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613902565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006134bc6001600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061391890919063ffffffff16565b905060006009600084815260200190815260200160002054905081811415156135af576000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561352d57fe5b9060005260206000200154905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561358757fe5b9060005260206000200181905550816009600083815260200190815260200160002081905550505b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036136019190613a24565b5050505050565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506009600083815260200190815260200160002081905550600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6136d8816126e4565b1515613772576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001807f746f6b656e496420616c726561647920657869737473206f7220676976656e2081526020017f6164647265737320697320696e76616c6964000000000000000000000000000081525060400191505060405180910390fd5b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061380b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613902565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600a80549050600b600083815260200190815260200160002081905550600a81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4706001029050833f91508082141580156138f9575060006001028214155b92505050919050565b6001816000016000828254019250508190555050565b600061395a83836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613962565b905092915050565b60008383111582901515613a11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156139d65780820151818401526020810190506139bb565b50505050905090810190601f168015613a035780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b815481835581811115613a4b57818360005260206000209182019101613a4a9190613a50565b5b505050565b613a7291905b80821115613a6e576000816000905550600101613a56565b5090565b9056fea165627a7a72305820397167bb45a29a7ef6fd3bc244f16134509d7fc897ea7629d7af0409123e92590029",
  "deployedBytecode": "0x608060405260043610610174576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062ad800c1461017957806301ffc9a71461022d578063081812fc1461029f578063095ea7b31461031a57806309a3beef146103755780630a2766801461044757806318160ddd146104a257806323b872dd146104cd57806327dc297e146105485780632ccde4f61461061a5780632f745c59146106ce578063320b2ad91461073d5780633474e94e1461076c57806338bbfa50146107bf57806340c10f191461092857806342842e0e1461099b5780634c1b1c9314610a165780634e41a1fb14610a6d5780634f6ccce714610b215780636352211e14610b7057806370a0823114610beb578063715018a614610c5057806379c6506814610c675780639b330cb914610cda578063a123c33e14610e25578063a22cb46514610ea0578063b88d4fde14610efd578063e985e9c51461100f578063fc8234cb14611098575b600080fd5b34801561018557600080fd5b506101b26004803603602081101561019c57600080fd5b81019080803590602001909291905050506110c7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101f25780820151818401526020810190506101d7565b50505050905090810190601f16801561021f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023957600080fd5b506102856004803603602081101561025057600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611193565b604051808215151515815260200191505060405180910390f35b3480156102ab57600080fd5b506102d8600480360360208110156102c257600080fd5b81019080803590602001909291905050506111fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032657600080fd5b506103736004803603604081101561033d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112b0565b005b34801561038157600080fd5b506104456004803603604081101561039857600080fd5b81019080803590602001906401000000008111156103b557600080fd5b8201836020820111156103c757600080fd5b803590602001918460018302840111640100000000831117156103e957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611470565b005b34801561045357600080fd5b506104a06004803603604081101561046a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061149b565b005b3480156104ae57600080fd5b506104b761173b565b6040518082815260200191505060405180910390f35b3480156104d957600080fd5b50610546600480360360608110156104f057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611748565b005b34801561055457600080fd5b506106186004803603604081101561056b57600080fd5b81019080803590602001909291908035906020019064010000000081111561059257600080fd5b8201836020820111156105a457600080fd5b803590602001918460018302840111640100000000831117156105c657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506117c8565b005b34801561062657600080fd5b506106536004803603602081101561063d57600080fd5b810190808035906020019092919050505061180b565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610693578082015181840152602081019050610678565b50505050905090810190601f1680156106c05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106da57600080fd5b50610727600480360360408110156106f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118d7565b6040518082815260200191505060405180910390f35b34801561074957600080fd5b5061075261194e565b604051808215151515815260200191505060405180910390f35b34801561077857600080fd5b506107a56004803603602081101561078f57600080fd5b8101908080359060200190929190505050611b44565b604051808215151515815260200191505060405180910390f35b3480156107cb57600080fd5b50610926600480360360608110156107e257600080fd5b81019080803590602001909291908035906020019064010000000081111561080957600080fd5b82018360208201111561081b57600080fd5b8035906020019184600183028401116401000000008311171561083d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156108a057600080fd5b8201836020820111156108b257600080fd5b803590602001918460018302840111640100000000831117156108d457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611d50565b005b34801561093457600080fd5b506109816004803603604081101561094b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611d55565b604051808215151515815260200191505060405180910390f35b3480156109a757600080fd5b50610a14600480360360608110156109be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611dd1565b005b348015610a2257600080fd5b50610a2b611e4d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a7957600080fd5b50610aa660048036036020811015610a9057600080fd5b8101908080359060200190929190505050611e73565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ae6578082015181840152602081019050610acb565b50505050905090810190601f168015610b135780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610b2d57600080fd5b50610b5a60048036036020811015610b4457600080fd5b8101908080359060200190929190505050611f3f565b6040518082815260200191505060405180910390f35b348015610b7c57600080fd5b50610ba960048036036020811015610b9357600080fd5b8101908080359060200190929190505050611f77565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610bf757600080fd5b50610c3a60048036036020811015610c0e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fb4565b6040518082815260200191505060405180910390f35b348015610c5c57600080fd5b50610c656120c7565b005b348015610c7357600080fd5b50610cc060048036036040811015610c8a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612197565b604051808215151515815260200191505060405180910390f35b348015610ce657600080fd5b50610daa60048036036040811015610cfd57600080fd5b8101908080359060200190640100000000811115610d1a57600080fd5b820183602082011115610d2c57600080fd5b80359060200191846001830284011164010000000083111715610d4e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001909291905050506121ae565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610dea578082015181840152602081019050610dcf565b50505050905090810190601f168015610e175780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610e3157600080fd5b50610e5e60048036036020811015610e4857600080fd5b81019080803590602001909291905050506121e4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610eac57600080fd5b50610efb60048036036040811015610ec357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919050505061229c565b005b348015610f0957600080fd5b5061100d60048036036080811015610f2057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610f8757600080fd5b820183602082011115610f9957600080fd5b80359060200191846001830284011164010000000083111715610fbb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506123d8565b005b34801561101b57600080fd5b5061107e6004803603604081101561103257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061245b565b604051808215151515815260200191505060405180910390f35b3480156110a457600080fd5b506110ad6124ef565b604051808215151515815260200191505060405180910390f35b60606110d2826126e4565b15156110dd57600080fd5b601460008381526020019081526020016000206000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111875780601f1061115c57610100808354040283529160200191611187565b820191906000526020600020905b81548152906001019060200180831161116a57829003601f168201915b50505050509050919050565b600060036000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6000808214151515611275576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e4964206d7573742062652076616c6964000000000000000000000081525060200191505060405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006112bb82611f77565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611387576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6581526020017f720000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806113c757506113c6813361245b565b5b1515611461576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7781526020017f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000081525060400191505060405180910390fd5b61146b83836112b0565b505050565b611479816126e4565b151561148457600080fd5b6114968261149183612756565b6128af565b505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561155f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561162a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f4e6577206f776e6572206d75737420626520612076616c69642061646472657381526020017f730000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b816001600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000600a80549050905090565b61175233826128f6565b151561175d57600080fd5b61176883838361298b565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b611807828260006040519080825280601f01601f1916602001820160405280156118015781602001600182028038833980820191505090505b50611d50565b5050565b6060611816826126e4565b151561182157600080fd5b601460008381526020019081526020016000206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118cb5780601f106118a0576101008083540402835291602001916118cb565b820191906000526020600020905b8154815290600101906020018083116118ae57829003601f168201915b50505050509050919050565b60006118e283611fb4565b821015156118ef57600080fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561193b57fe5b9060005260206000200154905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611a14576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900460ff16151515611abf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f70617573656420737461747573206d75737420626520646966666572656e742081526020017f7468616e2063757272656e74000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001905090565b60003373ffffffffffffffffffffffffffffffffffffffff16601a600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611c20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f536f6c7574696f6e206973206e6f7420756e697175652e00000000000000000081525060200191505060405180910390fd5b6060604051908101604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160011515815250601a60008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055509050507f01d5f9f5a890e5385b4f1d07d3c8c1f739f82bb433ed461d4551b7af3edc63408233604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a160019050919050565b505050565b6000611d6183836129af565b611dc7606060405190810160405280603f81526020017f68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e6381526020017f6f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f0081525083611470565b6001905092915050565b611ded83838360206040519081016040528060008152506123d8565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b601760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060611e7e826126e4565b1515611e8957600080fd5b601460008381526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f335780601f10611f0857610100808354040283529160200191611f33565b820191906000526020600020905b815481529060010190602001808311611f1657829003601f168201915b50505050509050919050565b6000611f4961173b565b82101515611f5657600080fd5b600a82815481101515611f6557fe5b90600052602060002001549050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612080576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f4552433732313a2062616c616e636520717565727920666f7220746865207a6581526020017f726f20616464726573730000000000000000000000000000000000000000000081525060400191505060405180910390fd5b601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561218b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b61219560006129d0565b565b60006121a38383611d55565b506001905092915050565b60606121b9826126e4565b15156121c457600080fd5b60606121d8846121d385612756565b6128af565b90508091505092915050565b600080821415151561225e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f506c6561736520656e74657220616e2076616c696420746f6b656e204964000081525060200191505060405180910390fd5b6001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156122d757600080fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6123e3848484611748565b6123ef84848484612ad1565b15156123fa57600080fd5b818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156125b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43616c6c6572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600260009054906101000a900460ff16151561265f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f70617573656420737461747573206d75737420626520646966666572656e742081526020017f7468616e2063757272656e74000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600260006101000a81548160ff0219169083151502179055507fff2b959f2bcdb44c7ecb4b16dae055431019d7350607125cfc2b74a06632c90e33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001905090565b6000806004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6060600082141561279e576040805190810160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506128aa565b600082905060005b6000821415156127cc578080600101915050600a828115156127c457fe5b0491506127a6565b6060816040519080825280601f01601f1916602001820160405280156128015781602001600182028038833980820191505090505b50905060006001830390505b6000861415156128a257600a8681151561282357fe5b066030017f01000000000000000000000000000000000000000000000000000000000000000282828060019003935081518110151561285e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681151561289a57fe5b04955061280d565b819450505050505b919050565b60606128ee8383602060405190810160405280600081525060206040519081016040528060008152506020604051908101604052806000815250612cf4565b905092915050565b60008061290283611f77565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061297157508373ffffffffffffffffffffffffffffffffffffffff16612959846111fb565b73ffffffffffffffffffffffffffffffffffffffff16145b806129825750612981818561245b565b5b91505092915050565b61299683838361310f565b6129a08382613464565b6129aa8282613608565b505050565b6129b982826136cf565b6129c38282613608565b6129cc8161386a565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08183604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000612af28473ffffffffffffffffffffffffffffffffffffffff166138b6565b1515612b015760019050612cec565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612bf8578082015181840152602081019050612bdd565b50505050905090810190601f168015612c255780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612c4757600080fd5b505af1158015612c5b573d6000803e3d6000fd5b505050506040513d6020811015612c7157600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612d505781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612e1a578881815181101515612d7e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612ddd57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612d67565b600090505b8751811015612ed2578781815181101515612e3657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612e9557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612e1f565b600090505b8651811015612f8a578681815181101515612eee57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612f4d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612ed7565b600090505b8551811015613042578581815181101515612fa657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561300557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f8f565b600090505b84518110156130fa57848181518110151561305e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156130bd57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613047565b82995050505050505050505095945050505050565b6004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151561320b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f66726f6d2061646472657373206d75737420626520746865206f776e6572206f81526020017f662074686520676976656e20746f6b656e00000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156132d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f53656e64696e672061646472657373206d75737420626520612076616c69642081526020017f616464726573730000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613404600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613902565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006134bc6001600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061391890919063ffffffff16565b905060006009600084815260200190815260200160002054905081811415156135af576000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561352d57fe5b9060005260206000200154905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561358757fe5b9060005260206000200181905550816009600083815260200190815260200160002081905550505b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036136019190613a24565b5050505050565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506009600083815260200190815260200160002081905550600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6136d8816126e4565b1515613772576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001807f746f6b656e496420616c726561647920657869737473206f7220676976656e2081526020017f6164647265737320697320696e76616c6964000000000000000000000000000081525060400191505060405180910390fd5b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061380b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613902565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600a80549050600b600083815260200190815260200160002081905550600a81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4706001029050833f91508082141580156138f9575060006001028214155b92505050919050565b6001816000016000828254019250508190555050565b600061395a83836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613962565b905092915050565b60008383111582901515613a11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156139d65780820151818401526020810190506139bb565b50505050905090810190601f168015613a035780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b815481835581811115613a4b57818360005260206000209182019101613a4a9190613a50565b5b505050565b613a7291905b80821115613a6e576000816000905550600101613a56565b5090565b9056fea165627a7a72305820397167bb45a29a7ef6fd3bc244f16134509d7fc897ea7629d7af0409123e92590029",
  "sourceMap": "212:1964:3:-;;;384:142;8:9:-1;5:2;;;30:1;27;20:12;5:2;384:142:3;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;384:142:3;;;;;;;;;;;;;;;;21795:328:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1310:10;1301:6;;:19;;;;;;;;;;;;;;;;;;1336:42;1357:10;1370:6;;;;;;;;;;;1336:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3190:5;3180:7;;:15;;;;;;;;;;;;;;;;;;4490:40;4087:10;4509:20;;4490:18;;;:40;;;:::i;:::-;6635;6509:10;6654:20;;6635:18;;;:40;;;:::i;:::-;14345:51;13951:10;14364:31;;14345:18;;;:51;;;:::i;:::-;21981:4;21973:5;:12;;;;;;;;;;;;:::i;:::-;;22009:6;21999:7;:16;;;;;;;;;;;;:::i;:::-;;22045:12;22029:13;:28;;;;;;;;;;;;:::i;:::-;;22067:49;21606:10;22086:29;;22067:18;;;:49;;;:::i;:::-;21795:328;;;503:15:3;477:14;;:42;;;;;;;;;;;;;;;;;;384:142;212:1964;;4840:158:0;4930:10;4915:25;;:11;:25;;;;;4907:34;;;;;;;;4987:4;4951:20;:33;4972:11;4951:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;4840:158;:::o;212:1964:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "212:1964:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22379:152:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22379:152:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22379:152:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22379:152:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4628:133:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4628:133:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7854:223;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7854:223:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7854:223:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22697:379;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22697:379:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22697:379:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23802:180;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23802:180:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23802:180:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;23802:180:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;23802:180:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;23802:180:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23802:180:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:280;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1767:280:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1767:280:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15110:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15110:94:0;;;;;;;;;;;;;;;;;;;;;;;9054:222;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9054:222:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9054:222:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14800:122:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14800:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14800:122:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14800:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14800:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14800:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14800:122:2;;;;;;;;;;;;;;;;;;22211:163:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22211:163:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22211:163:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22211:163:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14776:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14776:182:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14776:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3671:165;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3671:165:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1028:294:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1028:294:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1028:294:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14928:166:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14928:166:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14928:166:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14928:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14928:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14928:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14928:166:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14928:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14928:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14928:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14928:166:2;;;;;;;;;;;;;;;;;;24918:222:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24918:222:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24918:222:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9282:174;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9282:174:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9282:174:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:30:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;308:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;22536:156:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22536:156:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22536:156:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22536:156:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15541:148;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15541:148:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15541:148:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6980:162;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6980:162:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6980:162:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25145:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25145:188:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;25145:188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:84;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1622:84:0;;;;;;1409:765:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1409:765:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1409:765:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23081:249:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23081:249:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23081:249:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;23081:249:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;23081:249:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;23081:249:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23081:249:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;23081:249:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2057:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2057:188:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2057:188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8369:213;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8369:213:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8369:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9462:253;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9462:253:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;9462:253:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;9462:253:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9462:253:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9462:253:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9462:253:0;;;;;;;;;;;;;;;;;;8903:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8903:145:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8903:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3846:163:0;;;;;;;;;;;;;;;;;;;;;;;;;;;22379:152;22433:13;22466:16;22474:7;22466;:16::i;:::-;22458:25;;;;;;;;22500:10;:19;22511:7;22500:19;;;;;;;;;;;:24;;22493:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22379:152;;;:::o;4628:133::-;4698:4;4721:20;:33;4742:11;4721:33;;;;;;;;;;;;;;;;;;;;;;;;;;;4714:40;;4628:133;;;:::o;7854:223::-;7913:7;8002:1;7991:7;:12;;7983:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8046:15;:24;8062:7;8046:24;;;;;;;;;;;;;;;;;;;;;8039:31;;7854:223;;;:::o;22697:379::-;22760:13;22776:23;22791:7;22776:14;:23::i;:::-;22760:39;;22823:5;22817:11;;:2;:11;;;;22809:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22912:5;22898:19;;:10;:19;;;:58;;;;22921:35;22938:5;22945:10;22921:16;:35::i;:::-;22898:58;22877:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23049:20;23057:2;23061:7;23049;:20::i;:::-;22697:379;;;:::o;23802:180::-;23892:16;23900:7;23892;:16::i;:::-;23884:25;;;;;;;;23919:56;23943:12;23957:17;23966:7;23957:8;:17::i;:::-;23919:23;:56::i;:::-;;23802:180;;:::o;1767:280::-;1552:10;1541:21;;:6;;;;;;;;;;;:21;;;1533:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:1;1868:22;;:8;:22;;;;1860:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1971:8;1942:6;:15;1949:7;1942:15;;;;;;;;;;;:26;;;:37;;;;;;;;;;;;;;;;;;1998:38;2019:6;;;;;;;;;;;2027:8;1998:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:280;;:::o;15110:94::-;15154:7;15180:10;:17;;;;15173:24;;15110:94;:::o;9054:222::-;9144:39;9163:10;9175:7;9144:18;:39::i;:::-;9136:48;;;;;;;;9195:32;9209:4;9215:2;9219:7;9195:13;:32::i;:::-;9261:7;9257:2;9242:27;;9251:4;9242:27;;;;;;;;;;;;9054:222;;;:::o;14800:122:2:-;14875:40;14886:5;14893:7;14912:1;14902:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14902:12:2;;;;14875:10;:40::i;:::-;14800:122;;:::o;22211:163:0:-;22268:13;22301:16;22309:7;22301;:16::i;:::-;22293:25;;;;;;;;22335:10;:19;22346:7;22335:19;;;;;;;;;;;:32;;22328:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22211:163;;;:::o;14776:182::-;14856:7;14891:16;14901:5;14891:9;:16::i;:::-;14883:5;:24;14875:33;;;;;;;;14925:12;:19;14938:5;14925:19;;;;;;;;;;;;;;;14945:5;14925:26;;;;;;;;;;;;;;;;;;14918:33;;14776:182;;;;:::o;3671:165::-;3729:4;1552:10;1541:21;;:6;;;;;;;;;;;:21;;;1533:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:7;;;;;;;;;;;3359:8;3351:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3759:4;3749:7;;:14;;;;;;;;;;;;;;;;;;3782:18;3789:10;3782:18;;;;;;;;;;;;;;;;;;;;;;3821:4;3814:11;;3671:165;:::o;1028:294:3:-;1085:4;1136:10;1104:42;;:15;:20;1120:3;1104:20;;;;;;;;;;;:28;;;;;;;;;;;;:42;;;;1096:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1203:58;;;;;;;;;1220:3;1203:58;;;;1234:10;1203:58;;;;;;1255:4;1203:58;;;;;1180:15;:20;1196:3;1180:20;;;;;;;;;;;:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1272:30;1286:3;1291:10;1272:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;1315:4;1308:11;;1028:294;;;:::o;14928:166:2:-;;;;:::o;24918:222:0:-;24976:4;24991:24;25003:2;25007:7;24991:11;:24::i;:::-;25025:87;;;;;;;;;;;;;;;;;;;;;;;;25104:7;25025:11;:87::i;:::-;25129:4;25122:11;;24918:222;;;;:::o;9282:174::-;9368:39;9385:4;9391:2;9395:7;9368:39;;;;;;;;;;;;;:16;:39::i;:::-;9441:7;9437:2;9422:27;;9431:4;9422:27;;;;;;;;;;;;9282:174;;;:::o;308:30:3:-;;;;;;;;;;;;;:::o;22536:156:0:-;22592:13;22625:16;22633:7;22625;:16::i;:::-;22617:25;;;;;;;;22659:10;:19;22670:7;22659:19;;;;;;;;;;;:26;;22652:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22536:156;;;:::o;15541:148::-;15599:7;15634:13;:11;:13::i;:::-;15626:5;:21;15618:30;;;;;;;;15665:10;15676:5;15665:17;;;;;;;;;;;;;;;;;;15658:24;;15541:148;;;:::o;6980:162::-;7035:7;7115:11;:20;7127:7;7115:20;;;;;;;;;;;;;;;;;;;;;7108:27;;6980:162;;;:::o;25145:188::-;25200:7;25244:1;25227:19;;:5;:19;;;;25219:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25310:9;:16;25320:5;25310:16;;;;;;;;;;;;;;;;25303:23;;25145:188;;;:::o;1622:84::-;1552:10;1541:21;;:6;;;;;;;;;;;:21;;;1533:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1678:21;1696:1;1678:9;:21::i;:::-;1622:84::o;1409:765:3:-;1679:4;1709:16;1714:2;1717:7;1709:4;:16::i;:::-;;1742:4;1735:11;;1409:765;;;;:::o;23081:249:0:-;23160:13;23192:16;23200:7;23192;:16::i;:::-;23184:25;;;;;;;;23220:20;23243:56;23267:12;23281:17;23290:7;23281:8;:17::i;:::-;23243:23;:56::i;:::-;23220:79;;23317:6;23310:13;;;23081:249;;;;:::o;2057:188::-;2110:7;2151:1;2140:7;:12;;2132:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:6;:15;2215:7;2208:15;;;;;;;;;;;:26;;;;;;;;;;;;2201:33;;2057:188;;;:::o;8369:213::-;8454:10;8448:16;;:2;:16;;;;8440:25;;;;;;;;8512:8;8475:18;:30;8494:10;8475:30;;;;;;;;;;;;;;;:34;8506:2;8475:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;8562:2;8535:40;;8550:10;8535:40;;;8566:8;8535:40;;;;;;;;;;;;;;;;;;;;;;8369:213;;:::o;9462:253::-;9568:31;9581:4;9587:2;9591:7;9568:12;:31::i;:::-;9617:48;9640:4;9646:2;9650:7;9659:5;9617:22;:48::i;:::-;9609:57;;;;;;;;9700:7;9696:2;9681:27;;9690:4;9681:27;;;;;;;;;;;;9462:253;;;;:::o;8903:145::-;8983:4;9006:18;:25;9025:5;9006:25;;;;;;;;;;;;;;;:35;9032:8;9006:35;;;;;;;;;;;;;;;;;;;;;;;;;8999:42;;8903:145;;;;:::o;3846:163::-;3899:4;1552:10;1541:21;;:6;;;;;;;;;;;:21;;;1533:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3493:7;;;;;;;;;;;3485:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3929:5;3919:7;;:15;;;;;;;;;;;;;;;;;;3953:20;3962:10;3953:20;;;;;;;;;;;;;;;;;;;;;;3994:4;3987:11;;3846:163;:::o;9909:161::-;9966:4;9982:13;9998:11;:20;10010:7;9998:20;;;;;;;;;;;;;;;;;;;;;9982:36;;10052:1;10035:19;;:5;:19;;;;10028:26;;;9909:161;;;:::o;43270:465:2:-;43320:27;43369:1;43363:2;:7;43359:48;;;43386:10;;;;;;;;;;;;;;;;;;;;;;43359:48;43416:6;43425:2;43416:11;;43437:8;43455:66;43467:1;43462;:6;;43455:66;;;43484:5;;;;;;;43508:2;43503:7;;;;;;;;;;;43455:66;;;43530:17;43560:3;43550:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43550:14:2;;;;43530:34;;43574:6;43589:1;43583:3;:7;43574:16;;43600:100;43613:1;43607:2;:7;;43600:100;;;43663:2;43658;:7;;;;;;;;43653:2;:12;43642:25;;43630:4;43635:3;;;;;;;43630:9;;;;;;;;;;;;;;:37;;;;;;;;;;;43687:2;43681:8;;;;;;;;;;;43600:100;;;43723:4;43709:19;;;;;;43270:465;;;;:::o;39711:166::-;39789:33;39841:29;39851:2;39855;39841:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39834:36;;39711:166;;;;:::o;10430:246:0:-;10515:4;10531:13;10547:16;10555:7;10547;:16::i;:::-;10531:32;;10592:5;10581:16;;:7;:16;;;:51;;;;10625:7;10601:31;;:20;10613:7;10601:11;:20::i;:::-;:31;;;10581:51;:87;;;;10636:32;10653:5;10660:7;10636:16;:32::i;:::-;10581:87;10573:96;;;10430:246;;;;:::o;16064:239::-;16149:38;16169:4;16175:2;16179:7;16149:19;:38::i;:::-;16198:47;16231:4;16237:7;16198:32;:47::i;:::-;16256:40;16284:2;16288:7;16256:27;:40::i;:::-;16064:239;;;:::o;16558:196::-;16621:24;16633:2;16637:7;16621:11;:24::i;:::-;16656:40;16684:2;16688:7;16656:27;:40::i;:::-;16707;16739:7;16707:31;:40::i;:::-;16558:196;;:::o;2254:169::-;2309:16;2328:6;;;;;;;;;;;2309:25;;2353:8;2344:6;;:17;;;;;;;;;;;;;;;;;;2376:40;2397:8;2407;2376:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:169;;:::o;12796:347::-;12917:4;12942:15;:2;:13;;;:15::i;:::-;12941:16;12937:58;;;12980:4;12973:11;;;;12937:58;13005:13;13037:2;13021:36;;;13058:10;13070:4;13076:7;13085:5;13021:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13021:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13021:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13021:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13021:70:0;;;;;;;;;;;;;;;;13005:86;;5643:10;13119:16;;13109:26;;;:6;:26;;;;13101:35;;;12796:347;;;;;;;:::o;40281:1020:2:-;40413:33;40458:16;40483:2;40458:28;;40496:16;40521:2;40496:28;;40534:16;40559:2;40534:28;;40572:16;40597:2;40572:28;;40610:16;40635:2;40610:28;;40648:19;40733:3;:10;40720:3;:10;40707:3;:10;40694:3;:10;40681:3;:10;:23;:36;:49;:62;40670:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40670:74:2;;;;40648:96;;40754:19;40782:5;40754:34;;40798:6;40807:1;40798:10;;40818:6;40827:1;40818:10;;40847:1;40843:5;;40838:78;40854:3;:10;40850:1;:14;40838:78;;;40899:3;40903:1;40899:6;;;;;;;;;;;;;;;;;;;;40885;40892:3;;;;;;40885:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40866:3;;;;;;;40838:78;;;40934:1;40930:5;;40925:78;40941:3;:10;40937:1;:14;40925:78;;;40986:3;40990:1;40986:6;;;;;;;;;;;;;;;;;;;;40972;40979:3;;;;;;40972:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40953:3;;;;;;;40925:78;;;41021:1;41017:5;;41012:78;41028:3;:10;41024:1;:14;41012:78;;;41073:3;41077:1;41073:6;;;;;;;;;;;;;;;;;;;;41059;41066:3;;;;;;41059:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41040:3;;;;;;;41012:78;;;41108:1;41104:5;;41099:78;41115:3;:10;41111:1;:14;41099:78;;;41160:3;41164:1;41160:6;;;;;;;;;;;;;;;;;;;;41146;41153:3;;;;;;41146:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41127:3;;;;;;;41099:78;;;41195:1;41191:5;;41186:78;41202:3;:10;41198:1;:14;41186:78;;;41247:3;41251:1;41247:6;;;;;;;;;;;;;;;;;;;;41233;41240:3;;;;;;41233:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41214:3;;;;;;;41186:78;;;41287:6;41273:21;;;;;;;;;;;40281:1020;;;;;;;:::o;11533:735:0:-;11710:11;:20;11722:7;11710:20;;;;;;;;;;;;;;;;;;;;;11702:28;;:4;:28;;;11694:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11889:1;11875:16;;:2;:16;;;;11867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12010:4;11979:18;:24;11998:4;11979:24;;;;;;;;;;;;;;;:28;12004:2;11979:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;12126:2;12103:11;:20;12115:7;12103:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12142:41;12161:17;:21;12179:2;12161:21;;;;;;;;;;;;;;;12142:18;:41::i;:::-;12253:7;12249:2;12234:27;;12243:4;12234:27;;;;;;;;;;;;11533:735;;;:::o;18530:1128::-;18792:22;18817:32;18847:1;18817:12;:18;18830:4;18817:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;18792:57;;18859:18;18880:17;:26;18898:7;18880:26;;;;;;;;;;;;18859:47;;19024:14;19010:10;:28;;19006:323;;;19054:19;19076:12;:18;19089:4;19076:18;;;;;;;;;;;;;;;19095:14;19076:34;;;;;;;;;;;;;;;;;;19054:56;;19158:11;19125:12;:18;19138:4;19125:18;;;;;;;;;;;;;;;19144:10;19125:30;;;;;;;;;;;;;;;;;:44;;;;19274:10;19241:17;:30;19259:11;19241:30;;;;;;;;;;;:43;;;;19006:323;;19415:12;:18;19428:4;19415:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;18530:1128;;;;:::o;17376:183::-;17489:12;:16;17502:2;17489:16;;;;;;;;;;;;;;;:23;;;;17460:17;:26;17478:7;17460:26;;;;;;;;;;;:52;;;;17522:12;:16;17535:2;17522:16;;;;;;;;;;;;;;;17544:7;17522:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17522:30:0;;;;;;;;;;;;;;;;;;;;;;17376:183;;:::o;10833:497::-;10992:16;11000:7;10992;:16::i;:::-;10984:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11178:2;11155:11;:20;11167:7;11155:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11194:41;11213:17;:21;11231:2;11213:21;;;;;;;;;;;;;;;11194:18;:41::i;:::-;11315:7;11311:2;11290:33;;11299:10;11290:33;;;;;;;;;;;;10833:497;;:::o;17754:161::-;17857:10;:17;;;;17830:15;:24;17846:7;17830:24;;;;;;;;;;;:44;;;;17884:10;17900:7;17884:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17884:24:0;;;;;;;;;;;;;;;;;;;;;;17754:161;:::o;686:610:12:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1183:178:6:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:8:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;212:1964:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.5.0;\nimport \"../../zokrates/code/square/verifier.sol\";\nimport \"./ERC721Mintable.sol\";\n\n\n\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is ERC721Full{\n    \n    // Zokrates generated solidity contract\n    Verifier public squareVerifier;\n\n    string  _name;\n    string _symbol;\n    constructor(address verifierAddress) \n      ERC721Full()    \n        public\n    {   \n        squareVerifier = Verifier(verifierAddress);\n    }\n    \n// TODO define a solutions struct that can hold an index & an address\nstruct Solution{\n    bytes32 index;\n    address account;\n    bool isExist;\n}\n\n// TODO define an array of the above struct\n\n\n// TODO define a mapping to store unique solutions submitted\nmapping (bytes32 => Solution) uniqueSolutions;\n\n\n// TODO Create an event to emit when a solution is added\nevent SolutionAdded(bytes32 index, address account);\n\n \n// TODO Create a function to add the solutions to the array and emit the event\nfunction addSolutionsToArray(bytes32 key) public returns(bool){\n    require(uniqueSolutions[key].account != msg.sender, \"Solution is not unique.\");\n    uniqueSolutions[key] = Solution({index: key, account: msg.sender, isExist: true});\n    emit SolutionAdded(key, msg.sender);\n    return true;\n}\n\n\n// TODO Create a function to mint new NFT only after the solution has been verified\nfunction mintToken(\n            address to,\n            uint256 tokenId\n            // uint[2] memory a,\n            // uint[2][2] memory b,\n            // uint[2] memory c,\n            // uint[2] memory input)\n)               \n             public\n             returns (bool)\n              {\n        mint(to,tokenId);\n        return true;\n    // bytes32 key = keccak256(abi.encodePacked(a, b, c, input));\n\n    // if(!uniqueSolutions[key].isExist){\n    //   bool verification = squareVerifier.verifyTx(a, b, c,input);\n\n    //     if(verification){\n    //         addSolutionsToArray(key);\n    //         // require(index < totalSupply(), \"Invalid Token index\"); \n    //         //  - make sure you handle metadata as well as tokenSuplly\n    //     }\n    //   }\n    }\n}",
  "sourcePath": "C:/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7797
      ]
    },
    "id": 7798,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7700,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/C/projects/Blockchain-Capstone-NFT/zokrates/code/square/verifier.sol",
        "file": "../../zokrates/code/square/verifier.sol",
        "id": 7701,
        "nodeType": "ImportDirective",
        "scope": 7798,
        "sourceUnit": 8893,
        "src": "25:49:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7702,
        "nodeType": "ImportDirective",
        "scope": 7798,
        "sourceUnit": 1374,
        "src": "75:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7703,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1373,
              "src": "243:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1373",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 7704,
            "nodeType": "InheritanceSpecifier",
            "src": "243:10:3"
          }
        ],
        "contractDependencies": [
          135,
          217,
          1057,
          1257,
          759,
          263,
          1373,
          7698
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7797,
        "linearizedBaseContracts": [
          7797,
          1373,
          1257,
          7698,
          1057,
          759,
          263,
          217,
          135
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7706,
            "name": "squareVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7797,
            "src": "308:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8892",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7705,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8892,
              "src": "308:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8892",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7708,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 7797,
            "src": "345:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7707,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "345:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7710,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 7797,
            "src": "364:14:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7709,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "364:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7723,
              "nodeType": "Block",
              "src": "464:62:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7717,
                      "name": "squareVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7706,
                      "src": "477:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8892",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7719,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7712,
                          "src": "503:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7718,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8892,
                        "src": "494:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$8892_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "494:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8892",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "477:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8892",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7722,
                  "nodeType": "ExpressionStatement",
                  "src": "477:42:3"
                }
              ]
            },
            "documentation": null,
            "id": 7724,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 7715,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7714,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1373,
                  "src": "428:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1373_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "428:12:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7712,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7724,
                  "src": "396:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "395:25:3"
            },
            "returnParameters": {
              "id": 7716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "464:0:3"
            },
            "scope": 7797,
            "src": "384:142:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7731,
            "members": [
              {
                "constant": false,
                "id": 7726,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7731,
                "src": "623:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7725,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "623:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7728,
                "name": "account",
                "nodeType": "VariableDeclaration",
                "scope": 7731,
                "src": "642:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7727,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "642:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7730,
                "name": "isExist",
                "nodeType": "VariableDeclaration",
                "scope": 7731,
                "src": "663:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7729,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7797,
            "src": "602:76:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7735,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7797,
            "src": "787:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7731_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7734,
              "keyType": {
                "id": 7732,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "796:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "787:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7731_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7733,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7731,
                "src": "807:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7731_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7741,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7737,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "913:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7736,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7739,
                  "indexed": false,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "928:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "912:32:3"
            },
            "src": "893:52:3"
          },
          {
            "body": {
              "id": 7778,
              "nodeType": "Block",
              "src": "1090:232:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7749,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7735,
                              "src": "1104:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7731_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7751,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7750,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7743,
                              "src": "1120:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1104:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7731_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7752,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "account",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7728,
                          "src": "1104:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7753,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9397,
                            "src": "1136:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1136:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1104:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e206973206e6f7420756e697175652e",
                        "id": 7756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1148:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68e3d777e486467c3aae44680111336974a2f33582e02544c68239a1f637fbe3",
                          "typeString": "literal_string \"Solution is not unique.\""
                        },
                        "value": "Solution is not unique."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68e3d777e486467c3aae44680111336974a2f33582e02544c68239a1f637fbe3",
                          "typeString": "literal_string \"Solution is not unique.\""
                        }
                      ],
                      "id": 7748,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9400,
                        9401
                      ],
                      "referencedDeclaration": 9401,
                      "src": "1096:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1096:78:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7758,
                  "nodeType": "ExpressionStatement",
                  "src": "1096:78:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7759,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7735,
                        "src": "1180:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7731_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7761,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7760,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7743,
                        "src": "1196:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1180:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7731_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7763,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7743,
                          "src": "1220:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7764,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9397,
                            "src": "1234:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1234:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1255:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7762,
                        "name": "Solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7731,
                        "src": "1203:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Solution_$7731_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                        }
                      },
                      "id": 7767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "index",
                        "account",
                        "isExist"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1203:58:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7731_memory",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1180:81:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7731_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7769,
                  "nodeType": "ExpressionStatement",
                  "src": "1180:81:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7771,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7743,
                        "src": "1286:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7772,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9397,
                          "src": "1291:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1291:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7770,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7741,
                      "src": "1272:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7775,
                  "nodeType": "EmitStatement",
                  "src": "1267:35:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1315:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7747,
                  "id": 7777,
                  "nodeType": "Return",
                  "src": "1308:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolutionsToArray",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7743,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7779,
                  "src": "1057:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7742,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1056:13:3"
            },
            "returnParameters": {
              "id": 7747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7746,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7779,
                  "src": "1085:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7745,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1084:6:3"
            },
            "scope": 7797,
            "src": "1028:294:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7795,
              "nodeType": "Block",
              "src": "1699:475:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7789,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7781,
                        "src": "1714:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7790,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7783,
                        "src": "1717:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7788,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1294,
                      "src": "1709:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1709:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7792,
                  "nodeType": "ExpressionStatement",
                  "src": "1709:16:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1742:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7787,
                  "id": 7794,
                  "nodeType": "Return",
                  "src": "1735:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7781,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7796,
                  "src": "1441:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1441:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7783,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7796,
                  "src": "1465:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1427:194:3"
            },
            "returnParameters": {
              "id": 7787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7786,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7796,
                  "src": "1679:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7785,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1678:6:3"
            },
            "scope": 7797,
            "src": "1409:765:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7798,
        "src": "212:1964:3"
      }
    ],
    "src": "0:2176:3"
  },
  "legacyAST": {
    "absolutePath": "/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7797
      ]
    },
    "id": 7798,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7700,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/C/projects/Blockchain-Capstone-NFT/zokrates/code/square/verifier.sol",
        "file": "../../zokrates/code/square/verifier.sol",
        "id": 7701,
        "nodeType": "ImportDirective",
        "scope": 7798,
        "sourceUnit": 8893,
        "src": "25:49:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/projects/Blockchain-Capstone-NFT/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7702,
        "nodeType": "ImportDirective",
        "scope": 7798,
        "sourceUnit": 1374,
        "src": "75:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7703,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1373,
              "src": "243:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1373",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 7704,
            "nodeType": "InheritanceSpecifier",
            "src": "243:10:3"
          }
        ],
        "contractDependencies": [
          135,
          217,
          1057,
          1257,
          759,
          263,
          1373,
          7698
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7797,
        "linearizedBaseContracts": [
          7797,
          1373,
          1257,
          7698,
          1057,
          759,
          263,
          217,
          135
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7706,
            "name": "squareVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7797,
            "src": "308:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8892",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7705,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8892,
              "src": "308:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8892",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7708,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 7797,
            "src": "345:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7707,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "345:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7710,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 7797,
            "src": "364:14:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7709,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "364:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7723,
              "nodeType": "Block",
              "src": "464:62:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7717,
                      "name": "squareVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7706,
                      "src": "477:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8892",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7719,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7712,
                          "src": "503:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7718,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8892,
                        "src": "494:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$8892_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "494:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8892",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "477:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8892",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7722,
                  "nodeType": "ExpressionStatement",
                  "src": "477:42:3"
                }
              ]
            },
            "documentation": null,
            "id": 7724,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 7715,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7714,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1373,
                  "src": "428:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1373_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "428:12:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7712,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7724,
                  "src": "396:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "395:25:3"
            },
            "returnParameters": {
              "id": 7716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "464:0:3"
            },
            "scope": 7797,
            "src": "384:142:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7731,
            "members": [
              {
                "constant": false,
                "id": 7726,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7731,
                "src": "623:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7725,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "623:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7728,
                "name": "account",
                "nodeType": "VariableDeclaration",
                "scope": 7731,
                "src": "642:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7727,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "642:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7730,
                "name": "isExist",
                "nodeType": "VariableDeclaration",
                "scope": 7731,
                "src": "663:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7729,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "663:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7797,
            "src": "602:76:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7735,
            "name": "uniqueSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7797,
            "src": "787:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7731_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7734,
              "keyType": {
                "id": 7732,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "796:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "787:29:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7731_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7733,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7731,
                "src": "807:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7731_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7741,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7737,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "913:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7736,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7739,
                  "indexed": false,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 7741,
                  "src": "928:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "912:32:3"
            },
            "src": "893:52:3"
          },
          {
            "body": {
              "id": 7778,
              "nodeType": "Block",
              "src": "1090:232:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7749,
                              "name": "uniqueSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7735,
                              "src": "1104:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7731_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7751,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7750,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7743,
                              "src": "1120:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1104:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7731_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7752,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "account",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7728,
                          "src": "1104:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7753,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9397,
                            "src": "1136:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1136:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1104:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e206973206e6f7420756e697175652e",
                        "id": 7756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1148:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68e3d777e486467c3aae44680111336974a2f33582e02544c68239a1f637fbe3",
                          "typeString": "literal_string \"Solution is not unique.\""
                        },
                        "value": "Solution is not unique."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68e3d777e486467c3aae44680111336974a2f33582e02544c68239a1f637fbe3",
                          "typeString": "literal_string \"Solution is not unique.\""
                        }
                      ],
                      "id": 7748,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9400,
                        9401
                      ],
                      "referencedDeclaration": 9401,
                      "src": "1096:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1096:78:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7758,
                  "nodeType": "ExpressionStatement",
                  "src": "1096:78:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7759,
                        "name": "uniqueSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7735,
                        "src": "1180:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7731_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7761,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7760,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7743,
                        "src": "1196:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1180:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7731_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7763,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7743,
                          "src": "1220:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7764,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9397,
                            "src": "1234:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1234:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 7766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1255:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7762,
                        "name": "Solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7731,
                        "src": "1203:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Solution_$7731_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                        }
                      },
                      "id": 7767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "index",
                        "account",
                        "isExist"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1203:58:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7731_memory",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1180:81:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7731_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7769,
                  "nodeType": "ExpressionStatement",
                  "src": "1180:81:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7771,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7743,
                        "src": "1286:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7772,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9397,
                          "src": "1291:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1291:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7770,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7741,
                      "src": "1272:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7775,
                  "nodeType": "EmitStatement",
                  "src": "1267:35:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1315:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7747,
                  "id": 7777,
                  "nodeType": "Return",
                  "src": "1308:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolutionsToArray",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7743,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7779,
                  "src": "1057:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7742,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1056:13:3"
            },
            "returnParameters": {
              "id": 7747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7746,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7779,
                  "src": "1085:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7745,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1084:6:3"
            },
            "scope": 7797,
            "src": "1028:294:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7795,
              "nodeType": "Block",
              "src": "1699:475:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7789,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7781,
                        "src": "1714:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7790,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7783,
                        "src": "1717:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7788,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1294,
                      "src": "1709:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1709:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7792,
                  "nodeType": "ExpressionStatement",
                  "src": "1709:16:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 7793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1742:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7787,
                  "id": 7794,
                  "nodeType": "Return",
                  "src": "1735:11:3"
                }
              ]
            },
            "documentation": null,
            "id": 7796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7781,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7796,
                  "src": "1441:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1441:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7783,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7796,
                  "src": "1465:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1427:194:3"
            },
            "returnParameters": {
              "id": 7787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7786,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7796,
                  "src": "1679:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7785,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1678:6:3"
            },
            "scope": 7797,
            "src": "1409:765:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7798,
        "src": "212:1964:3"
      }
    ],
    "src": "0:2176:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x69eCb50DB13435690B89244F87B9C868Adf80B5d",
      "transactionHash": "0x7f513897c9716e273f6e095421fe5cd38b5d2aee97589991142b9ab6fb767893"
    }
  },
  "schemaVersion": "3.0.9",
  "updatedAt": "2021-07-27T18:30:31.581Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}